<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学习中遇到的问题</title>
      <link href="/2022/12/31/Question/Question/"/>
      <url>/2022/12/31/Question/Question/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/12/19/SSM/SpringMVC/"/>
      <url>/2022/12/19/SSM/SpringMVC/</url>
      
        <content type="html"><![CDATA[<h1>注解配置</h1><h1>获取参数</h1><h1>向作用域中共享参数</h1><h1>视图</h1><h1>RESTful</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习</title>
      <link href="/2022/12/10/SSM/Spring/"/>
      <url>/2022/12/10/SSM/Spring/</url>
      
        <content type="html"><![CDATA[<h1>IOC容器的获取</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-autowire-xml.xml&quot;</span>);</span><br><span class="line">ConfigurableApplicationContext 提供IOC容器的刷新和关闭</span><br><span class="line"><span class="number">1.</span> ioc.getBean(String name)</span><br><span class="line"><span class="number">2.</span> ioc.getBean(Class class)   </span><br><span class="line"><span class="number">3.</span> ioc.getBean(String name,Class class)</span><br></pre></td></tr></table></figure><h1>将Java对象交给IOC容器管理的方式</h1><ol><li>XML文件配置 <bean></li><li>注解</li></ol><h1>DI (依赖注入)</h1><ol><li>setter注入</li><li>构造器注入</li></ol><h2 id="setter注入">setter注入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        1. setter注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;score&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="构造器注入">构造器注入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        2. 构造器注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;25&quot;</span> <span class="attr">name</span>=<span class="string">&quot;score&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;95&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="类类型属性">类类型属性</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">1. 引入外部bean</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;score&quot;</span> <span class="attr">value</span>=<span class="string">&quot;88&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;classOne&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;classOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;001&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java班&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2. 级联方式</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;score&quot;</span> <span class="attr">value</span>=<span class="string">&quot;88&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz.cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz.cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">级联方式首先要必须实例化,否则为null</span><br><span class="line"></span><br><span class="line">3. 内部bean</span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;score&quot;</span> <span class="attr">value</span>=<span class="string">&quot;88&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;classOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;001&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java班&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">IOC容器不能访问到内部bean</span><br></pre></td></tr></table></figure><h2 id="数组类型属性">数组类型属性</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span>标签</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentThree&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小红&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    数组赋值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>吸烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    集合赋值 1 2--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teachers&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;teachers&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--            &lt;list&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--                &lt;ref bean=&quot;teacherOne&quot;&gt;&lt;/ref&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--                &lt;ref bean=&quot;teacherTwo&quot;&gt;&lt;/ref&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--            &lt;/list&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="集合类型属性">集合类型属性</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">引入约束</span><br><span class="line">xmlns:util=&quot;http://www.springframework.org/schema/util&quot;</span><br><span class="line"><span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">&quot;teachers&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;teacherOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;teacherTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Map</span><br><span class="line"><span class="tag">&lt;<span class="name">util:map</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key-ref</span>=<span class="string">&quot;&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:map</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="特殊值">特殊值</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">NULL值</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;score&quot;</span> <span class="attr">value</span>=<span class="string">&quot;88&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="P命名空间">P命名空间</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">引入约束</span><br><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studnetFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span> <span class="attr">p:sname</span>=<span class="string">&quot;张三&quot;</span> <span class="attr">p:sage</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line">直接在属性中进行DI</span><br></pre></td></tr></table></figure><h1>引入外部文件</h1><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.properties</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/school?serverTimezone=UTC</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">24680</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">引入约束</span><br><span class="line">xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;jdbc.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:property-placeholder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h1>Bean的作用域</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scope属性</span><br><span class="line">singleton: 单例(default)</span><br><span class="line">prototype: 多例</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studnetFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pojo.Student&quot;</span> <span class="attr">p:sname</span>=<span class="string">&quot;张三&quot;</span> <span class="attr">p:sage</span>=<span class="string">&quot;20&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h1>Bean的生命周期</h1><ol><li>setter注入</li><li>construct注入</li><li>初始化前后置处理器</li><li>初始化</li><li>初始化后后置处理器</li><li>销毁</li></ol><p>注意:</p><ol><li>后置处理器需要实现<strong>BeanPostProcessor</strong>接口,且对所有bean适用</li><li>初始化/销毁方法需要通过属性<strong>init-method</strong>/<strong>destroy-method</strong>手动配置</li><li>bean的销毁是在IOC容器关闭时进行的,ConfigurableApplicationContext 提供IOC容器的刷新和关闭</li></ol><h1>FactoryBean</h1><ol><li>将类实现FactoryBean接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.springframework.beans.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FactoryBean</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">OBJECT_TYPE_ATTRIBUTE</span> <span class="operator">=</span> <span class="string">&quot;factoryBeanObjectType&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    T <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    Class&lt;?&gt; getObjectType();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">isSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>将该类进行注册</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot; &quot;</span> <span class="attr">class</span>=<span class="string">&quot; &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>IOC容器中存在的是该类所提供的类型对象</li></ol><h1>基于XMl的自动装配</h1><p>标签属性 autowire=“rule”</p><p>装配规则:</p><ol><li>default</li><li>no</li><li>byType</li><li>byName</li></ol><h1>注解管理</h1><h2 id="注解">注解</h2><p>注解类型:</p><ol><li>@Component</li><li>@Controller</li><li>@Service</li><li>@Repository</li></ol><p>注意:</p><ol><li>所有本质都是一样的只是为了便于理解</li><li>默认对象名称类名的小驼峰形式</li><li>自定义对象名称@Component(“”)</li></ol><h2 id="扫描">扫描</h2><p>只有注解还不够还要进行扫描</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">情况一：指定要排除的组件</span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- context:exclude-filter标签：指定排除规则 --&gt;</span> </span><br><span class="line">    &lt;!-type：设置排除或包含的依据 type=&quot;annotation&quot;，根据注解排除，expression中设置要排除的注解的全类名type=&quot;assignable&quot;，根据类型排除，expression中设置要排除的类型的全类名--&gt; </span><br><span class="line"><span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;context:exclude-filter type=&quot;assignable&quot;expression=&quot;com.atguigu.controller.UserController&quot;/&gt;--&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">情况二:仅扫描指定组件</span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- context:include-filter标签：指定在原有扫描规则的基础上追加的规则 --&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- use-default-filters属性：取值false表示关闭默认扫描规则 --&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 此时必须设置use-default-filters=&quot;false&quot;，因为默认规则即扫描指定包下所有类 --&gt;</span> </span><br><span class="line">    &lt;!-type：设置排除或包含的依据 type=&quot;annotation&quot;，根据注解排除，expression中设置要排除的注解的全类名 type=&quot;assignable&quot;，根据类型排除，expression中设置要排除的类型的全类名--&gt; </span><br><span class="line">    <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--&lt;context:include-filter type=&quot;assignable&quot; expression=&quot;com.atguigu.controller.UserController&quot;/&gt;--&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自动装配">自动装配</h2><p>通过**@Autowired**注解</p><p>放置地方:</p><ol><li>成员变量</li><li>setter方法</li><li>有参构造器</li></ol><p>@Qualifier注解：根据@Qualifier注解中指定的名称作为bean的id进行匹配</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;userServiceImpl&quot;)</span> </span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>&#123; </span><br><span class="line">    userService.saveUser();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单工厂模式</title>
      <link href="/2022/09/09/DesignPattern/SimpleFactory/"/>
      <url>/2022/09/09/DesignPattern/SimpleFactory/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Matlab学习</title>
      <link href="/2022/09/07/%E6%95%B0%E6%A8%A1/matlab/"/>
      <url>/2022/09/07/%E6%95%B0%E6%A8%A1/matlab/</url>
      
        <content type="html"><![CDATA[<h1>MatLab</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">数据类型</span><br><span class="line">整数 浮点数 字符串</span><br><span class="line">数值的基本操作对象是一个向量</span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">a=<span class="number">1</span>:<span class="number">3</span> =&gt; a=[<span class="number">1</span>:<span class="number">3</span>] a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] start:step:<span class="keyword">end</span></span><br><span class="line">函数未内置函数</span><br><span class="line">power(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">函数的定义:</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(x)</span>    无返回值</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span>=<span class="title">fun</span><span class="params">(x)</span>    有返回值</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">矩阵表示</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">3</span>;<span class="number">2</span>,<span class="number">4</span>]</span><br><span class="line">注释</span><br><span class="line"><span class="comment">% ....</span></span><br></pre></td></tr></table></figure><h1>插值与拟合</h1><p>用途 :  对离散的数据进行处理</p><p>插值 : 对‘’中间值‘’的一种“预测”  通过函数 ( 一种连续的关系 )进行预测</p><p>分类 (自变量) :</p><ol><li>一维插值</li><li>二维插值</li></ol><p><img src="../../assets/img/%E6%95%B0%E6%A8%A1/%E6%8F%92%E5%80%BC.jpg" alt="插值"></p><p>matlab 实现 :</p><p><img src="../../assets/img/%E6%95%B0%E6%A8%A1/%E4%B8%80%E7%BB%B4%E6%8F%92%E5%80%BC.jpg" alt="一维插值"></p><p><img src="../../assets/img/%E6%95%B0%E6%A8%A1/%E4%BA%8C%E7%BB%B4%E6%8F%92%E5%80%BC.jpg" alt="二维插值"></p><p><strong>拟合</strong> : 根据所给的数据拟合成函数,进而进行预测( <strong>短期</strong> )</p><p><img src="../../assets/img/%E6%95%B0%E6%A8%A1/%E6%8B%9F%E5%90%88.jpg" alt="拟合"></p><h1>层次分析</h1><p>模糊系统的评价问题 ( 定性 -&gt; 定量)</p><ol><li>建立模型</li></ol><p>​       目标层( 最终目标 )</p><p>​       准则层( 影响因素 )</p><p>​       方案层( 备选方案 )</p><ol start="2"><li>判断矩阵</li></ol><p>​        准则层的判断矩阵</p><p>​        方案层针对不同准则的判断矩阵</p><ol start="3"><li>一致性检验</li></ol><h1>线性规划</h1><p>线性规划问题用lingo求解</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高数</title>
      <link href="/2022/09/05/%E8%80%83%E7%A0%94/%E9%AB%98%E6%95%B0/"/>
      <url>/2022/09/05/%E8%80%83%E7%A0%94/%E9%AB%98%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1>函数与极限</h1><h2 id="映射与函数">映射与函数</h2><p><strong>一: 映射</strong></p><p><strong>映射的概念:</strong></p><p>定义 设X、Y是两个非空集合，如果存在一个法则f，使得对X中每个元素x，按法则f，在Y中有唯一确定的元素y与之对应，那么称f为从X到Y的映射，记作</p><p>f：X→Y，</p><p>其中y称为元素x （在映射f下）的像，并记作f（x），即</p><p>y=f（x），</p><p>而元素x称为元素y（在映射f下）的一个原像；集合X称为映射f的定义域，记作D，，即D，=X；X中所有元素的像所组成的集合称为映射f的值域，记作R，或f（X），即</p><p>R,=f(X) = If(x) lx e X).</p><p><strong>映射的几点注意:</strong></p><ol><li>映射的基本元素: 定义域 值域 对应关系</li><li>集合X中的每个元素在集合Y中都有唯一确定的元素,但集合Y的每个元素可以是一对多</li><li>值域是集合Y的子集,不一定值域=Y</li></ol><p><strong>几种特殊的映射:</strong></p><ol><li>满射</li><li>单射</li><li>一一映射(双射)</li></ol><p><strong>满射:</strong></p><p>设f是从集合X到集合Y的映射，若R，=Y，即Y中任一元素y都是X中某元素的像，则称f为X到Y上的映射或满射</p><p><strong>单射:</strong></p><p>若对X中任意两个不同元素x，+x2，它们的像f（x，） +f（x2），则称f为X到Y的单射</p><p><strong>一一映射:</strong></p><p>若映射f<strong>既是单射</strong>，<strong>又是满射</strong>，则称f为一一映射（或双射）</p><p><strong>函数的本质:</strong></p><p>函数是数与数的一种映射</p><p><strong>逆映射:</strong></p><p><strong>对于单射来说</strong>,Y=f(X)  X=g(Y)</p><p><strong>复合映射:</strong></p><p>一个映射的结果是另一映射的定义域,则前者则可以复合两种映射</p><p><strong>二: 函数</strong></p><p><strong>函数的概念:</strong></p><p>定义 设数集DCR，则称映射f：D→R为定义在D上的函数，通常简记为</p><p>y=f(x), xED,</p><p>其中x称为自变量，y称为因变量，D称为定义域，记作D，，即D，=D.</p><p>函数的定义中，对每个xED，按对应法则f，总有唯一确定的值y与之对应，这个值称为函数f在x处的函数值，记作f（x），即y=f（x）.因变量y与自变量x之间的这种依赖关系，通常称为函数关系.函数值f（x）的全体所构成的集合称为函数f的值域，记作R，或f（D），即</p><p>R,=f(D) = (yly=f(x) ,x EDI.</p><p><strong>函数的要素:</strong></p><ol><li>定义域</li><li>对应关系</li></ol><p><strong>函数的特征:</strong></p><ol><li>有界性</li><li>单调性</li><li>奇偶性</li><li>周期性(最小正周期)</li></ol><p><strong>基本初等函数:</strong></p><ol><li>幂函数</li><li>指数函数</li><li>对数函数</li><li>三角函数</li><li>反三角函数</li></ol><p><a href="https://zhuanlan.zhihu.com/p/390928056">考生必记：三角函数公式汇总+记忆（没有比这更全） - 知乎 (zhihu.com)</a></p><p><img src="https://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20180912/33f04574e72b42b1a3827c140a2a496c.jpeg" alt="img"></p><p><img src="https://www.51wendang.com/pic/d72e04cf8cd055902aaea1e4/1-981-jpg_6_0_______-808-0-0-808.jpg" alt="img"></p><p><a href="https://www.jianshu.com/p/d3b665025775">三角函数与反三角函数（图像） - 简书 (jianshu.com)</a></p><p><strong>初等函数:</strong></p><p>常数与基本初等函数经过有限次数的四则运算或复合最终的式子</p><p><strong>复合函数的四则运算:</strong></p><p>分别计算再进行四则运算</p><p><strong>几个特殊函数:</strong></p><ol><li>常数函数</li><li>绝对值函数</li><li>分段函数</li><li>符号函数</li><li><strong>双曲函数</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Lingo的使用</title>
      <link href="/2022/09/04/%E6%95%B0%E6%A8%A1/lingo/"/>
      <url>/2022/09/04/%E6%95%B0%E6%A8%A1/lingo/</url>
      
        <content type="html"><![CDATA[<h1><strong>简单的模型:</strong></h1><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>max</mi><mo>⁡</mo><mi>S</mi><mspace linebreak="newline"></mspace><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msub><mi>a</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mi>S</mi><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>6</mn></msubsup><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mi>M</mi><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msub><mi>a</mi><mn>5</mn></msub><msub><mi>x</mi><mn>6</mn></msub><mo>=</mo><mi>M</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\max S\\s.t.\begin{cases} \quad a_ix_i=S,i=1,2,\cdots,5,\\\quad \sum_{i=1}^{6}{x_i}=M,\\\quad a_5x_6=M\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">5</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mpunct">,</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">model;</span><br><span class="line">max=s;</span><br><span class="line">1.018*x1=s;</span><br><span class="line">1.0432*x2=s;</span><br><span class="line">1.07776*x3=s;</span><br><span class="line">1.07776*1.018*x4=s;</span><br><span class="line">1.144*x5=s;</span><br><span class="line">1.144*x6=m;</span><br><span class="line">x1+x2+x3+x4+x5+x6=m;</span><br><span class="line">m=5000;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h1><strong>引入集合:</strong></h1><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>min</mi><mo>⁡</mo><mi>z</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>6</mn></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow><mn>8</mn></munderover><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mspace linebreak="newline"></mspace><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mn>8</mn></msubsup><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>6</mn></msubsup><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>d</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"/><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2.</mn><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\min z=\sum_{i=1}^6\sum_{j-1}^8{c_{ij}}x_{ij}\\s.t.\begin{cases}\quad \sum_{j=1}^8x_{ij}\leq a_i,i=1,2,\cdots,6,\\\quad \sum_{i=1}^6x_{ij}=d_j,j=1,2,\cdots,8,\\\quad x_{ij}\geq0,i=1,2.\cdots,8,\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2149em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:4.3238em;vertical-align:-1.9119em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4119em;"><span style="top:-4.4119em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6</span><span class="mpunct">,</span></span></span><span style="top:-2.9681em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">8</span><span class="mpunct">,</span></span></span><span style="top:-1.5281em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">8</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9119em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">!集合段定义;</span><br><span class="line">!集合名称/成员数.../:变量名称 -&gt; 基本集合(一维数组);</span><br><span class="line">!links(行数,列数):变量名称 -&gt; 衍生集合(二维数组);</span><br><span class="line">!集合段相当于开辟空间.数据段为其赋值;</span><br><span class="line">sets:</span><br><span class="line">WH/W1..W6/:AI;</span><br><span class="line">VD/V1..V8/:DJ;</span><br><span class="line">links(WH,VD):C,X;</span><br><span class="line">endsets</span><br><span class="line">!数据段定义;</span><br><span class="line">data:</span><br><span class="line">AI=60,55,51,43,41,52;</span><br><span class="line">DJ=35,37,22,32,41,32,43,38;</span><br><span class="line">C=6,2,6,77,4,2,5,9</span><br><span class="line">  4,9,5,3,8,5,8,2</span><br><span class="line">  5,2,1,9,7,4,3,3</span><br><span class="line">  7,6,7,3,9,2,6,5</span><br><span class="line">  2,3,9,5,7,2,6,5</span><br><span class="line">  5,5,2,2,8,1,4,3;</span><br><span class="line">enddata</span><br><span class="line">! @函数名() lingo内部函数调用;</span><br><span class="line">min=@sum(links(i,j):C(i,j)*X(i,j));</span><br><span class="line">@for(WH(i):@sum(VD(j):X(i,j))&lt;AI(i));</span><br><span class="line">@for(VD(j):@sum(WH(i):X(i,j))=DJ(j));</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><strong>灵敏度分析:(ctrl+r)</strong></p><ol><li>目标函数在最优解不变的情况下,参数的系数允许变化范围</li><li>什么影子系数(不知道)</li></ol><p><strong>Solver Statues界面解读</strong></p><p><strong>调试Debug(ctrl+d)</strong><br>在目标函数无可行解是进行调试</p><p><strong>设置界面解读(ctrl+i)</strong></p><p>各类求解器的配置(P24)</p><p>求解非线性规划全局最优解(全局最优解器 多起点求解器)</p><p><strong>数学函数(P34)</strong></p><h1><strong>典例:</strong></h1>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lingo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2022/08/30/Java/java/"/>
      <url>/2022/08/30/Java/java/</url>
      
        <content type="html"><![CDATA[<h1>数据存储</h1><ol><li>寄存器 (Registers)</li><li>栈内存 (Stack)</li><li>堆内存 (Heap)</li><li>常量存储 (Constant storage)</li><li>非RAM存储 (No-RAM storage)</li></ol><h2 id="寄存器存储">寄存器存储</h2><p>寄存器是位于CPU内部,数据临时存放的地方,存取速度快,但Java不支持对寄存器进行操作</p><h2 id="栈内存">栈内存</h2><p>栈内存是位于内存中的RAM中,程序的运行和对象的引用都是在栈中</p><h2 id="堆内存">堆内存</h2><p>栈内存是位于内存中的RAM中,对象的具体数据再堆中</p><h2 id="常量池">常量池</h2><p>栈内存是位于内存中的<strong>ROM</strong>中,由于常量一旦声明便不能更改,因此内存中有专门的地方存储</p><h2 id="非RAM存储">非RAM存储</h2><p>数据完全存在于程序之外，在程序未运行以 及脱离程序控制后依然存在,例如:序列化数据(网络传输中对象的序列化)和持久化数据(在计算机硬盘中存储数据)</p><h1>基本数据类型</h1><p>基本数据类型</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理</title>
      <link href="/2022/08/25/%E8%AE%A1%E7%BB%84/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
      <url>/2022/08/25/%E8%AE%A1%E7%BB%84/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1>绪论</h1><p>[第一章   计算机系统概述.pptx](resouce\第一章   计算机系统概述.pptx)</p><h3 id="一-电子计算机">一.电子计算机</h3><p>概念:电子计算机是一个不需要人工直接干预能自动.高速.准确地对信息经行处理和存储的电子设备</p><p>分类: 电子模拟计算机 和 电子数字计算机</p><h3 id="二-简史">二.简史</h3><p>根据內部的电子元器件可分为:</p><ol><li>电子管计算机</li><li>晶体管计算机</li><li>小.中规模计算机</li><li>大.超大规模计算机</li></ol><h2 id="存储程序控制">存储程序控制</h2><p>由冯.诺依曼提出</p><p>内容:</p><ol><li>计算机应有运算器.控制器.存储器.输入设备.输出设备五大基本部分组成</li><li>计算机內部用二进制表示指令和数据</li><li>将编写好的程序和原始数据事先保存在存储器中,然后在启动计算机工作</li></ol><h2 id="硬件">硬件</h2><p>运算器.控制器.存储器.输入设备.输出设备和总线</p><p>CPU:运算器+控制器</p><p>电脑组成: 主机(<strong>CPU</strong>+主存储器) + 外设 (输入设备.输出设备 <strong>辅助存储器</strong>)</p><h3 id="一-输入设备">一.输入设备</h3><h3 id="二-输出设备">二.输出设备</h3><h3 id="三-存储器">三.存储器</h3><p>存储数据的仪器</p><p>一般构成一个存储系统</p><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>高速缓冲存储器 (Cache)</td><td>用于CPU与主存储器之间的缓冲 (通常当CPU速度非常高时)</td></tr><tr><td>主存储器</td><td>用于CPU与主存储器之间的缓冲 (断电即逝)</td></tr><tr><td>辅助存储器</td><td>存储数据 CPU不能直接访问</td></tr></tbody></table><h3 id="四-运算器">四.运算器</h3><p>计算机进行算术运算和逻辑运算的仪器</p><h3 id="五-控制器">五.控制器</h3><p>控制其它设备,完成指令的执行</p><p>计算机的控制中心,根据人为指定的操作,协调计算机其它部件有条不紊的经行运作</p><h3 id="六-总线">六.总线</h3><p>是一组多个部件服务的公共信息传送线路,能分时地发送和接收其它部件信息</p><p>特点:分时共享</p><p>结构:</p><p>最简单的结构为单总线结构</p><p>优点:提高CPU的工作效率,外设连接更灵活,易于扩展</p><p>缺点:由于部件挂在同一组总线上,根据总线的分时共享,所以在同一时刻只能一对部件传送信息</p><p>系统总线: 数据总线 . 地址总线 . 控制总线</p><p>数据总线 :CPU与其它部件经行数据传输的线路</p><p>地址总线 :地址信息</p><p>控制总线 :CPU的控制命令和 主存储器的反馈信号</p><h2 id="哈佛结构">哈佛结构</h2><p>不同与冯.诺依曼结构,指令与数据完全分开在两个存储器,指令存储器(PM)和数据存储器(DM),总线至少两组</p><h2 id="计算机系统">计算机系统</h2><p>计算机系统由硬件系统和软件系统组成</p><p>硬件系统和软件系统的关系:</p><ol><li>相互依存,协同发展</li><li>逻辑等效性</li></ol><p>固件</p><h2 id="系列机与软件兼容">系列机与软件兼容</h2><h3 id="系列机">系列机:</h3><p>由一个厂家生产,有相同的系统结构,但有不同的组成和实现的一系列不同型号的机器</p><p>相同的系统结构: 指令系统.数据格式.字符编码.中断系统.控制方式和输入输出操作方式等多方面保持同一</p><h3 id="软件兼容">软件兼容:</h3><p>某种机器编制的程序,在不修改的情况下,在另一种机器上也能运行</p><ol><li>向上(下)兼容     机器的档次</li><li>向前(后)兼容     机器市场发布的时间</li></ol><h2 id="计算机系统的分层次结构">计算机系统的分层次结构</h2><p>划分标准: 功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">虚拟机器:</span><br><span class="line">应用语言层   机器语言:由于某种用途而专门设计,各种面向问题的应用语言</span><br><span class="line">高级语言层   机器语言:各类高级语言 由编译程序经行编译</span><br><span class="line">汇编指令层   机器语言:汇编指令 由汇编程序经行编译</span><br><span class="line">操作系统层   一方面管理传统机器的软硬件资源,另一方面是传统机器的延申</span><br><span class="line">实际机器:</span><br><span class="line">指令集架构层  机器语言:指令集 由微程序经行解释</span><br><span class="line">微代码层      机器语言:微指令集 由硬件直接执行</span><br><span class="line">逻辑门层      计算机系统的内核,由一系列的物理逻辑电路构成</span><br></pre></td></tr></table></figure><p>意义: 正确理解计算机系统的工作过程,明确软硬件在计算机系统中的地位和作用</p><h2 id="计算机系统的工作过程和性能指标">计算机系统的工作过程和性能指标</h2><h3 id="工作过程">工作过程</h3><p>取指执行</p><h3 id="性能指标">性能指标</h3><ol><li><p>机器字长</p></li><li><p>数据通路宽路</p></li><li><p>主存容量</p></li><li><p>运算速度</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 吞吐量和响应时间</span><br><span class="line"><span class="number">2.</span> 主频和时钟周期</span><br><span class="line"><span class="number">3.</span> CPI</span><br><span class="line"><span class="number">4.</span> MIPS</span><br><span class="line"><span class="number">5.</span> MFLOPS</span><br></pre></td></tr></table></figure><h1>数据的机器层次表示</h1><p>[第二章   数据的机器层次表示.pptx](resouce\第二章   数据的机器层次表示.pptx)</p><h2 id="数值数据的表示">数值数据的表示</h2><p>机器数:机器内部表示数的编码</p><p>不同进制:</p><ol><li>二进制 binary   (011011)2        010011B</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">0b01010011</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>八进制 oct    (64155721)8    01002101222Q   咦?为什么是Q</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">072150</span>;   </span><br></pre></td></tr></table></figure><ol start="3"><li><p>十进制</p></li><li><p>十六进制  hex   (01102110)16    0100A1B1H</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">0x120A11B2</span>;</span><br></pre></td></tr></table></figure><h2 id="无符号数与有符号数">无符号数与有符号数</h2><p><strong>以下全部假设机器字长为8</strong></p><p>无符号数表示范围: 0 ~ 255</p><p>有符号数( 正/负 ): 用最高位表示符号位 其它位数表示数的绝对值</p><p>有符号数表示的范围: -128 ~ 127  ( -128 ^ - ^ )</p><h2 id="不同的编码方式">不同的编码方式</h2><ol><li>原码</li><li>反码</li><li>补码</li><li>移码</li></ol><p>一. 原码</p><p>符号位(最高位): 正 0 负 1</p><p>数值位: 真值的绝对值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span> <span class="number">0000</span> <span class="number">1100</span></span><br><span class="line">-<span class="number">3</span> <span class="number">1000</span> <span class="number">0011</span></span><br></pre></td></tr></table></figure><p>表示范围: -127 ~ 127</p><p>0的表示: (+0) 0000 0000  (-0) 1000 0000</p><p>优点: 直观易懂,转换容易</p><p>缺点: 在进行数值运算时符号位不能直接参与运算</p><p>二. 反码</p><p>在原码上 符号位不变,其余按位取反 (前提是负数,正数三码同一)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span> <span class="number">0000</span> <span class="number">1100</span></span><br><span class="line">-<span class="number">3</span> <span class="number">1111</span> <span class="number">1100</span></span><br></pre></td></tr></table></figure><p>表示范围: -127 ~ 127</p><p>0的表示: (+0) 0111 1111  (-0) 1111 1111</p><p>反码可以说是原码到补码的中间码,有无都可</p><p>三. 补码</p><ol><li>补码 = 反码 + 1</li><li>原码的最右边的1开始到最右不变,其余位取反 ( 当然符号位不能变 )   这种方法无反码的产生</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span> <span class="number">0000</span> <span class="number">1100</span></span><br><span class="line">-<span class="number">3</span> <span class="number">1111</span> <span class="number">1101</span></span><br></pre></td></tr></table></figure><p>表示范围: -128 ~ 127    (嗯~  ^ - ^  <strong>-128</strong> )</p><p>0的表示: ( 0 ) 0000 0000  ( 1000 0000 表示 -128 )</p><p>计算机中数值运算的表示</p><p>四. 移码</p><p>[X]移 = X + 偏置值</p><p>有一种是: 移码 = 补码 + 1000 0000</p><p>即: 符号位 正 1 负 0 其余位同补码</p><p>0的表示: ( 0 ) 1000 0000</p><p>优点: 码值越大,真值越大,用作表示浮点数的阶码,比较浮点数</p><p>原码.反码.补码的比较:</p><ol><li>正数三码同一,不同的编码方式针对于负数</li><li>0的表示 原码与反码: 2种 补码与移码: 1种</li></ol><p><img src="D:%5CTypora%5Cnote%5Cimage%5C%E4%B8%8D%E5%90%8C%E7%A0%81%E5%80%BC%E7%9A%84%E5%AF%B9%E6%AF%94.jpg" alt="不同码值的对比"></p><h2 id="机器数的定点表示与浮点表示">机器数的定点表示与浮点表示</h2><p>分类依据: 小数点的位置是否固定</p><p>最高位还是符号位</p><p>定点数:</p><ol><li>定点整数也称为纯整数 小数点在最后</li><li>定点小数也称为纯小数 小数点在符号位的后面数值位的前面,但在计算机中不表示小数点,心中要有小数点</li></ol><p>浮点数:</p><p>N = M * R^E</p><p>M: 表示尾数( 纯小数 ) 其位数决定有效数字的精度</p><p>R: 基数 一般 R=2</p><p>E: 阶码 其位数决定浮点数表示的范围</p><p>规格化浮点数: 尾数的最高位数必须是一个有效位</p><p>如采用原码表示为 1 ,采用补码表示 与符号位相反</p><h2 id="IEEE754标准浮点数">IEEE754标准浮点数:</h2><p>符号位 阶码 尾数</p><p>float单精度浮点数( 32位 ) 符号位( 1位 ) 阶码( 8位) 尾数 ( 23位 )</p><p>double双精度浮点数( 64位 ) 符号位( 1位 ) 阶码( 11位) 尾数 ( 52位 )</p><p>偏移值: float 7FH 127 111 1111 ; double 3FFH 1023 11 1111 1111</p>]]></content>
      
      
      <categories>
          
          <category> 计组 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML CSS JS</title>
      <link href="/2022/08/25/%E5%89%8D%E7%AB%AF/Grammar/"/>
      <url>/2022/08/25/%E5%89%8D%E7%AB%AF/Grammar/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML">HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">基本框架</span><br><span class="line">标签 属性</span><br><span class="line">语言规范</span><br><span class="line">字符集</span><br><span class="line">name content</span><br><span class="line">实体(转义字符)</span><br><span class="line">块元素</span><br><span class="line">hgroup</span><br><span class="line">引用</span><br><span class="line">块元素与行内元素</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>    层</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  仅标记无效果,供后续方便修改</span><br><span class="line">列表: </span><br><span class="line">1.有序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>listiteam<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">2.无序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>listiteam<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">3.自定义列表</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>定义目标<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>定义内容<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">超链接:</span><br><span class="line">转的指定的网页或位置</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">&quot;链接地址&quot;</span>&gt;</span>文本名称<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">是否打开新的标签页:</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>|&quot;<span class="attr">_blank</span>&quot;&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">转的指定的位置</span><br><span class="line">顶部:#</span><br><span class="line">顶部或任意位置</span><br><span class="line">id</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;英文标号&quot;</span> <span class="attr">...</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">临时占用</span><br><span class="line">javascript:;</span><br><span class="line">图片标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;路径&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;名称&quot;</span>&gt;</span></span><br><span class="line">内联框架:</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>|&quot;<span class="attr">1</span>&quot;&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">音频:</span><br><span class="line">1. <span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">contros</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">2. <span class="tag">&lt;<span class="name">audio</span>  <span class="attr">contros</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot; &quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">embed</span>&gt;</span>旧版兼容</span><br><span class="line">视频:</span><br><span class="line"><span class="tag">&lt;<span class="name">video</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span>同上</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--学习HTML只要就是学习HTML的标签及属性--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--图片  谈及路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../imgs/1.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;192&quot;</span> <span class="attr">height</span>=<span class="string">&quot;108&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片不显示时显示&quot;</span> <span class="attr">title</span>=<span class="string">&quot;悬浮显示&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--超链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--共有六个标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h2&gt;标题1&lt;/h2&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h3&gt;标题1&lt;/h3&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h4&gt;标题1&lt;/h4&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h5&gt;标题1&lt;/h5&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;h6&gt;标题1&lt;/h6&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文章格式 存在行间距--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>世界<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文字格式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>床<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span>前<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>明月<span class="tag">&lt;/<span class="name">i</span>&gt;</span>光</span><br><span class="line"><span class="comment">&lt;!--列表--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--有序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>  <span class="attr">type</span>=<span class="string">&quot;A&quot;</span> <span class="attr">start</span>=<span class="string">&quot;1&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--无序列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;circle&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--实体 防止解析错误,相当于转义字符--&gt;</span></span><br><span class="line">1<span class="symbol">&amp;lt;</span>5 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">6<span class="symbol">&amp;gt;</span>2 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">9<span class="symbol">&amp;ge;</span>5 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--特殊标记 上下标--&gt;</span></span><br><span class="line">x<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">H<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>O</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--表格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>  <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>水果<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>单价<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;td&gt;8&lt;/td&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>26<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  form表单--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;Success.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        昵称: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;nickName&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        性别: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gener&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gener&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span> 女 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        兴趣: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bas&quot;</span>&gt;</span> 篮球</span><br><span class="line">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fot&quot;</span> <span class="attr">checked</span>&gt;</span> 足球</span><br><span class="line">             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;pai&quot;</span>&gt;</span> 排球 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        星座: <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;star&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>天蝎座<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>金牛座<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">selected</span>&gt;</span>狮子座<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        备注: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;beizhu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS">CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line">一.内联样式---不推荐使用</span><br><span class="line">&lt;<span class="selector-tag">p</span> style=&quot; <span class="attribute">color</span>:red; <span class="attribute">font-size</span>:<span class="number">60px</span>;&quot;&gt;这时CSS的例子&lt;<span class="selector-tag">p</span>&gt;</span><br><span class="line"></span><br><span class="line">二.内部样式---较少使用</span><br><span class="line">&lt;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">P</span>&#123;                      <span class="comment">/*CSS选择器*/</span></span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line"></span><br><span class="line">三.外部样式---推荐使用</span><br><span class="line">css文件</span><br><span class="line"><span class="selector-tag">P</span>&#123;                      //CSS选择器</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line">引入方式:</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;CSS文件路径&quot;</span>&gt;</span><br><span class="line">CSS语法:</span><br><span class="line">选择器  声明块</span><br><span class="line">选择器:</span><br><span class="line">一. 元素选择器</span><br><span class="line">p&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span><span class="selector-class">.id</span>选择器(不可重复)</span><br><span class="line"><span class="selector-id">#first</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;first&quot;&gt;示例一&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> id=&quot;sec&quot;&gt;示例二&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line"><span class="number">3</span>.类选择器(可重复 常用)</span><br><span class="line"><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;red&quot;&gt;示例一&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> &gt;示例二&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;red&quot;&gt;示例三&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;n1 n2 n3&quot;&gt;示例四&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line"><span class="number">4</span>.通配选择器</span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">5</span>.交集选择器(同时满足)</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;red&quot;&gt;示例一&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> &gt;示例二&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>  class=&quot;red&quot;&gt;示例三&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;示例四&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line"><span class="number">6</span>.并集选择器(满足其一即可)    , 或</span><br><span class="line"><span class="selector-tag">span</span>,<span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;red&quot;&gt;示例一&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> &gt;示例二&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>  class=&quot;red&quot;&gt;示例三&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;示例四&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">二.位置</span><br><span class="line">关系选择器:</span><br><span class="line">祖宗元素</span><br><span class="line">父元素</span><br><span class="line">子元素</span><br><span class="line">兄弟元素</span><br><span class="line"><span class="number">1</span>.子元素选择器</span><br><span class="line">父元素 &gt; 子元素&#123;    ////指定父元素下的指定子元素</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span>.后代选择器</span><br><span class="line">父元素  子元素&#123;     //指定父元素下的所有子元素</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">3</span>.兄弟选择器</span><br><span class="line">兄 + 弟&#123;            //兄下面的紧挨的弟元素</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">兄 ~ 弟&#123;            //兄下面的所有的弟元素</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">三.属性选择器</span><br><span class="line">元素名<span class="selector-attr">[属性=...]</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">过滤条件:</span><br><span class="line">属性                    //为...属性</span><br><span class="line">属性=...                //属性为...</span><br><span class="line">属性^=...               //以...开头</span><br><span class="line">属性$=...               //以...结尾</span><br><span class="line">属性*=...               //包含...</span><br><span class="line">伪类选择器:              //特定的状态</span><br><span class="line"><span class="number">1</span>.以所有的元素排行</span><br><span class="line">:first-child</span><br><span class="line">:last-child</span><br><span class="line">:<span class="built_in">nth-child</span>()</span><br><span class="line"><span class="number">2</span><span class="built_in">n</span>(even)         //偶数</span><br><span class="line"><span class="number">2</span>n+<span class="number">1</span>(odd)        //奇数</span><br><span class="line"><span class="number">1</span>.以同类型的元素排行</span><br><span class="line">:first-of-type</span><br><span class="line">:last-of-type</span><br><span class="line">:<span class="built_in">nth-of-type</span>()</span><br><span class="line"><span class="number">3</span>.否定伪类</span><br><span class="line">:<span class="built_in">not</span>()</span><br><span class="line">超链接的伪类:</span><br><span class="line">:link        //正常链接</span><br><span class="line">:visited     //访问过的链接</span><br><span class="line">:hover       //鼠标指向</span><br><span class="line">:active      //鼠标点击</span><br><span class="line">伪元素:</span><br><span class="line">::first-letter</span><br><span class="line">::first-line</span><br><span class="line">::selection</span><br><span class="line">::before</span><br><span class="line">::after</span><br><span class="line">需结合content使用</span><br><span class="line">选择器的权重</span><br><span class="line">优先级:</span><br><span class="line">内联选择器      <span class="number">1000</span></span><br><span class="line">id选择器        <span class="number">100</span> </span><br><span class="line">类/伪类选择器    <span class="number">10</span></span><br><span class="line">元素选择器       <span class="number">1</span></span><br><span class="line">通配选择器       <span class="number">0</span></span><br><span class="line">继承             无</span><br><span class="line">优先级相同时取决于靠后</span><br><span class="line">单位:</span><br><span class="line">长度单位:</span><br><span class="line">px</span><br><span class="line">em</span><br><span class="line">rem</span><br><span class="line">颜色单位:</span><br><span class="line">英语</span><br><span class="line">rgb</span><br><span class="line">rgba</span><br><span class="line">十六进制</span><br><span class="line">盒子模型:</span><br><span class="line"><span class="number">1</span>.内容区(content)</span><br><span class="line"><span class="number">2</span>.内边距(padding)</span><br><span class="line"><span class="number">3</span>.边框(border)</span><br><span class="line"><span class="number">4</span>.外边距(margin)</span><br><span class="line">.box1&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background</span>:  chocolate;</span><br><span class="line">            <span class="attribute">border-color</span>: blueviolet;</span><br><span class="line">            <span class="attribute">border-width</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">border-style</span>: solid;</span><br><span class="line">        &#125;</span><br><span class="line">边框:</span><br><span class="line">四条边框可以相互独立设置</span><br><span class="line">border:<span class="number">20px</span> red solid;</span><br><span class="line">相邻元素垂直方向外边距折叠问题:</span><br><span class="line">兄弟元素:有利</span><br><span class="line">父子元素:消除</span><br><span class="line">元素地显示类型:</span><br><span class="line">dispaly:_____:</span><br><span class="line">inlin block none</span><br><span class="line">元素的显示状态:</span><br><span class="line">visibility:______;</span><br><span class="line">visible hidden</span><br><span class="line">盒子的大小:</span><br><span class="line">box-sizing:_______;    //wigth high  的表示</span><br><span class="line"><span class="attribute">content</span>-box            </span><br><span class="line"><span class="attribute">border</span>-box</span><br><span class="line">轮廓:</span><br><span class="line">outline:</span><br><span class="line">阴影:</span><br><span class="line">box-shadow:_ _ _ _</span><br><span class="line">圆角:</span><br><span class="line">border-radius:_ _</span><br><span class="line">border-top-left-radius:</span><br><span class="line">border-radius:<span class="number">50%</span>      //圆形</span><br><span class="line">浮动:      //元素水平排列</span><br><span class="line">float:none;</span><br><span class="line"><span class="attribute">left</span>  </span><br><span class="line"><span class="attribute">right</span></span><br><span class="line">特点:</span><br><span class="line"><span class="number">1</span>.浮动元素完全脱离文本流,不占位置</span><br><span class="line"><span class="number">2</span>.浮动元素不会超出父元素</span><br><span class="line"><span class="number">3</span>.浮动元素不会超过其兄弟元素</span><br><span class="line"><span class="number">4</span>.浮动元素文字环绕</span><br><span class="line">text-decoration:none        //去除下划线</span><br><span class="line">line-height:父元素高度       //文字水平居中</span><br><span class="line">浮动缺点:高度塌陷</span><br><span class="line">块元素高度不写死后发生</span><br><span class="line">解决:开启<span class="built_in">BFC</span>(Block Format Context)块元素格式环境</span><br><span class="line">方式:</span><br><span class="line">float</span><br><span class="line">overflow:hide</span><br><span class="line">clear:___;        //清除受其它元素的影响</span><br><span class="line"><span class="attribute">left</span></span><br><span class="line"><span class="attribute">right</span></span><br><span class="line">both</span><br><span class="line">高度塌陷完美解决方案:</span><br><span class="line">.box::after&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    context:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line">定位(<span class="attribute">position</span>):</span><br><span class="line"><span class="number">1</span>.相对定位 (relation)</span><br><span class="line"><span class="number">2</span>.绝对定位 (absolute)</span><br><span class="line"><span class="number">3</span>.固定定位 (fixed)</span><br><span class="line"><span class="number">4</span>.粘滞定位 (sticky)</span><br><span class="line">position:static;</span><br><span class="line"><span class="number">1</span>.相对定位 (relation):</span><br><span class="line">偏移量(offset):</span><br><span class="line">top</span><br><span class="line">bottom</span><br><span class="line">left</span><br><span class="line">right</span><br><span class="line">坐标系:文档流的初始位置为原点</span><br><span class="line">相对定位特点:</span><br><span class="line"><span class="number">1</span>.没有脱离文档流</span><br><span class="line"><span class="number">2</span>.提升元素的层级</span><br><span class="line"><span class="number">3</span>.不改变元素的性质</span><br><span class="line">灵魂出窍</span><br><span class="line">绝对定位:</span><br><span class="line">包含块</span><br><span class="line">脱离文档流</span><br><span class="line">坐标系:以最近的相对定位的块元素</span><br><span class="line">固定定位:</span><br><span class="line">坐标系:窗口视图</span><br><span class="line">定位的层级:</span><br><span class="line">z-index:num;</span><br><span class="line">祖先元素层级&lt;后代元素的层级</span><br><span class="line"><span class="attribute">background-clip</span>: content-box;   //背景不影响边框</span><br><span class="line">字体:</span><br><span class="line">color:</span><br><span class="line">font-size:</span><br><span class="line">font-family:</span><br><span class="line">@font-face&#123;</span><br><span class="line"><span class="attribute">font-family</span>:</span><br><span class="line">src:<span class="built_in">url</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">图标字体(iconfont):</span><br><span class="line"><span class="number">1</span>.下载</span><br><span class="line"><span class="number">2</span>.导入</span><br><span class="line"><span class="number">3</span>.类名引入</span><br><span class="line">三种方法使用</span><br><span class="line">行高:</span><br><span class="line">字体实际占有的大小line-height</span><br><span class="line">字体大小font-size</span><br><span class="line">背景:</span><br><span class="line">雪碧图</span><br></pre></td></tr></table></figure><h2 id="Javascript">Javascript</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">文件引入</span><br><span class="line"><span class="number">1.</span> 内部引入</span><br><span class="line">&lt;script&gt;  . ..   &lt;\script&gt;</span><br><span class="line"><span class="number">2.</span> 外部引入</span><br><span class="line">&lt;script src=<span class="string">&quot;file_path&quot;</span>&gt;&lt;\script&gt;</span><br><span class="line">最好是在body后引入</span><br><span class="line"></span><br><span class="line"><span class="title class_">ECMAScript</span>语法:</span><br><span class="line"><span class="keyword">var</span> 与 <span class="keyword">let</span> 与 <span class="keyword">const</span></span><br><span class="line">三者都是声明变量的关键词</span><br><span class="line"><span class="number">1.</span> 作用域</span><br><span class="line"><span class="keyword">var</span> : 整个函数  </span><br><span class="line"><span class="title function_">let</span>(<span class="keyword">const</span>) : 代码块</span><br><span class="line"><span class="number">2.</span> 全局变量</span><br><span class="line"><span class="keyword">var</span> : 不加 <span class="keyword">var</span> 修饰</span><br><span class="line"><span class="title function_">let</span>(<span class="keyword">const</span>) : 同C</span><br><span class="line"><span class="number">3.</span> 声明提升</span><br><span class="line"><span class="keyword">var</span> : 支持</span><br><span class="line"><span class="title function_">let</span>(<span class="keyword">const</span>) : 不支持</span><br><span class="line"><span class="number">4.</span> 冗余声明</span><br><span class="line"><span class="keyword">var</span> : 支持</span><br><span class="line"><span class="title function_">let</span>(<span class="keyword">const</span>) : 不支持</span><br><span class="line"><span class="number">5.</span> 值修改</span><br><span class="line"><span class="keyword">var</span> : 可以</span><br><span class="line"><span class="keyword">let</span> : 可以</span><br><span class="line"><span class="keyword">const</span> : 不可以,定义时需要赋值</span><br><span class="line">总结:</span><br><span class="line">少用 <span class="keyword">var</span> ,多采用 <span class="keyword">let</span> <span class="keyword">const</span></span><br><span class="line"></span><br><span class="line">数据类型:</span><br><span class="line"><span class="number">6</span>种原始数据类型 : <span class="title class_">Number</span> , <span class="title class_">String</span> , <span class="title class_">Boolean</span> , <span class="title class_">Undefined</span> , <span class="title class_">Null</span> , <span class="title class_">Symbol</span></span><br><span class="line"><span class="number">1</span>种复杂数据类型 : <span class="title class_">Object</span></span><br><span class="line"> </span><br><span class="line"><span class="title class_">Number</span> :</span><br><span class="line">包括整数和浮点数</span><br><span class="line"><span class="number">1.</span> 整数</span><br><span class="line">最大值 <span class="title class_">Number</span>.<span class="property">MAX_VALUE</span> (<span class="title class_">Infinity</span>)   <span class="number">1.7976931348623157e+308</span></span><br><span class="line">最小值 <span class="title class_">Number</span>.<span class="property">MIN_VALUE</span> (-<span class="title class_">Infinity</span>)  <span class="number">5e-324</span></span><br><span class="line"><span class="title function_">isInfin</span>()</span><br><span class="line"><span class="number">2.</span> 浮点数</span><br><span class="line">科学计数法</span><br><span class="line"><span class="number">12e-3</span> =&gt; <span class="number">0.012</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">NaN</span> : <span class="title class_">Not</span> a number</span><br><span class="line"><span class="built_in">isNaN</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">NaN</span> == <span class="title class_">NaN</span>); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">转换:</span><br><span class="line"><span class="title class_">Number</span>()</span><br><span class="line"><span class="built_in">parseInt</span>()</span><br><span class="line"><span class="built_in">parseFloat</span>()</span><br><span class="line"></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">null</span>) = <span class="number">0</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="string">&quot;123abc&quot;</span>)  = <span class="title class_">NaN</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;123abc&quot;</span>) = <span class="number">123</span></span><br><span class="line"><span class="built_in">parseInt</span>( , ) 明确格式后简写</span><br><span class="line"> <span class="built_in">parseFloat</span>(<span class="string">&quot;3.125e7&quot;</span>)</span><br><span class="line"></span><br><span class="line">字符串:</span><br><span class="line"><span class="number">1.</span> <span class="title class_">String</span>()    先调用对象的<span class="title function_">valueof</span>(),再调用<span class="title function_">toString</span>()</span><br><span class="line"><span class="number">2.</span> <span class="title function_">toString</span>()  <span class="literal">null</span> <span class="literal">undefined</span> 无<span class="title function_">toString</span>()</span><br><span class="line">模板字面量:     <span class="title class_">JavaScript</span>的一种表达式</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`line1</span></span><br><span class="line"><span class="string">123   line2`</span>;</span><br><span class="line">输出:</span><br><span class="line">line1</span><br><span class="line"><span class="number">123</span>   line2</span><br><span class="line">插值:</span><br><span class="line"><span class="keyword">let</span> value  = <span class="number">666</span>;</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`abc <span class="subst">$&#123;value&#125;</span> def`</span>;</span><br><span class="line">str = abc <span class="number">666</span> def</span><br><span class="line">标签函数:</span><br><span class="line">就是一个普通函数,只不过参数和传参有些不同</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tagFunc</span>(<span class="params">strings,...exps</span>)&#123;&#125;</span><br><span class="line">string 原始模板</span><br><span class="line">...exps 插值</span><br><span class="line">tagFunc<span class="string">`<span class="subst">$&#123;a&#125;</span>+<span class="subst">$&#123;b&#125;</span>=<span class="subst">$&#123;a+b&#125;</span>`</span></span><br><span class="line">strings : ,+,=,</span><br><span class="line">...exps : <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line">总结:</span><br><span class="line">模板字面量的出现是为了简化字符串拼接</span><br><span class="line"></span><br><span class="line">操作符:</span><br><span class="line">同<span class="title class_">Java</span></span><br><span class="line">特殊:</span><br><span class="line">新增 : ** python  幂</span><br><span class="line">== 与 === , != 与 !==</span><br><span class="line">前者会自动进行类型转换,再进行比较,后者相反,推荐使用后者</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法</title>
      <link href="/2022/08/25/Python/Grammar/"/>
      <url>/2022/08/25/Python/Grammar/</url>
      
        <content type="html"><![CDATA[<h2 id="变量">变量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">定义时无需声明 是一种动态语言</span><br><span class="line">a=<span class="number">3</span></span><br><span class="line">a=<span class="string">&#x27;abc&#x27;</span>  字符串用<span class="string">&#x27;&#x27;</span>或<span class="string">&quot;&quot;</span>引起来</span><br><span class="line">数值与非数值:</span><br><span class="line">    数值: 整数和浮点数 没有范围限制,太大显示inf</span><br><span class="line">    字符串</span><br><span class="line">    布尔值: <span class="literal">True</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="数值运算">数值运算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">四则运算 ( + - * /)</span><br><span class="line">特殊:</span><br><span class="line">    幂运算: <span class="number">2</span>**<span class="number">3</span> (<span class="number">2</span>^<span class="number">3</span>)</span><br><span class="line">    整除:   <span class="number">10</span>//<span class="number">3</span> (<span class="number">3</span>)</span><br><span class="line">    取模:   <span class="number">5</span>%<span class="number">2</span>  (<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="字符串">字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line">prnt(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)     <span class="comment"># , =&gt; 空格</span></span><br><span class="line"><span class="built_in">print</span>(...line     <span class="comment">#多行输出</span></span><br><span class="line">     new line...)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27; \&quot; &#x27;</span>)     <span class="comment">#转义 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27; \&quot; &#x27;</span>)    <span class="comment">#不转义 </span></span><br><span class="line"><span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)   <span class="number">65</span>     <span class="comment">#单字符的unicode码值</span></span><br><span class="line"><span class="built_in">chr</span>(<span class="number">48</span>)    <span class="string">&#x27;0&#x27;</span>    <span class="comment">#数转字符</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)    <span class="comment">#字符类型编码成字节类型</span></span><br><span class="line"><span class="string">&#x27;\xa0\xe5\xa5\xbd&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment">#解码</span></span><br><span class="line"><span class="built_in">len</span>(<span class="built_in">str</span>)          <span class="comment">#长度</span></span><br><span class="line"><span class="comment">#格式化输出</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%02d&#x27;</span> % <span class="number">3</span>)       <span class="comment"># %d 整数 %.nf浮点数 %s 字符串 %x 十六进制输出</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%.2f&#x27;</span> % <span class="number">5.127</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%x&#x27;</span> % <span class="number">0x12345</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s %d&#x27;</span> % (<span class="string">&#x27;bob&#x27;</span>,<span class="number">123</span>))</span><br></pre></td></tr></table></figure><h2 id="列表List">列表List</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>=[<span class="number">12</span>,<span class="string">&#x27;abc&#x27;</span>,<span class="number">3.14</span>,<span class="literal">True</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],&#123;k:v&#125;]    <span class="comment"># 内容可变</span></span><br><span class="line"><span class="built_in">list</span>[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">list</span>[-<span class="number">1</span>]    </span><br><span class="line"><span class="built_in">list</span>.append(<span class="string">&#x27;str&#x27;</span>)    <span class="comment">#追加</span></span><br><span class="line"><span class="built_in">list</span>.pop()            <span class="comment">#删除</span></span><br><span class="line"><span class="built_in">list</span>.insert(<span class="number">0</span>,<span class="string">&#x27;str&#x27;</span>)  <span class="comment">#插入</span></span><br><span class="line"><span class="comment"># 切片操作      [start:end:space]   [start,end)</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>][:<span class="number">3</span>]  =&gt;  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">list2=<span class="built_in">list</span>[:]         <span class="comment">#复制</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>:        <span class="comment">#遍历列表</span></span><br><span class="line"><span class="keyword">for</span> i,v <span class="keyword">in</span> enummble(<span class="built_in">list</span>):   <span class="comment">#遍历列表  双值</span></span><br></pre></td></tr></table></figure><h2 id="元组-truple">元组 truple</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tuple</span>  = (<span class="number">12</span>,<span class="string">&#x27;abc&#x27;</span>,<span class="number">3.14</span>,<span class="literal">True</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],&#123;k:v&#125;)  <span class="comment"># 内容不可变</span></span><br><span class="line">支持切片操作</span><br><span class="line"><span class="built_in">tuple</span>[<span class="number">4</span>][<span class="number">0</span>]=<span class="string">&quot;x&quot;</span></span><br><span class="line">注意:</span><br><span class="line">tuple1=(<span class="number">1</span>,)  <span class="comment">#  只用一个元素的元组    (1,)</span></span><br><span class="line">tuple2=(<span class="number">1</span>)   <span class="comment">#  1                    1</span></span><br></pre></td></tr></table></figure><h2 id="字典dict">字典dict</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">映射关系   无序</span><br><span class="line"><span class="built_in">dict</span>=&#123;<span class="string">&#x27;apple&#x27;</span>:<span class="number">12</span>,<span class="string">&#x27;banana&#x27;</span>:<span class="number">13</span>,<span class="string">&#x27;bob&#x27;</span>:<span class="number">15</span>,<span class="number">66</span>:<span class="string">&#x27;abc&#x27;</span>&#125;</span><br><span class="line">vaule=<span class="built_in">dict</span>.get(key)</span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;bob&#x27;</span>]=<span class="number">20</span>   <span class="comment"># 覆盖</span></span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;tom&#x27;</span>]=<span class="number">22</span>   <span class="comment"># 添加</span></span><br><span class="line"><span class="built_in">dict</span>.pop(<span class="string">&#x27;tom&#x27;</span>)  <span class="comment">#删除</span></span><br><span class="line">遍历</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">dict</span>.keys():</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> <span class="built_in">dict</span>.values():</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">dict</span>.items():</span><br></pre></td></tr></table></figure><h2 id="集合set">集合set</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">特殊的映射关系,只有key   无序</span><br><span class="line">需要借助<span class="built_in">list</span></span><br><span class="line"><span class="built_in">set</span>=([<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,])</span><br><span class="line"><span class="built_in">set</span> =&gt; (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">set</span>.remove(<span class="number">1</span>)   <span class="comment"># 删除</span></span><br><span class="line">集合的交集.并集</span><br><span class="line">set1&amp;set2</span><br><span class="line">set1|set2</span><br></pre></td></tr></table></figure><h2 id="函数">函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">导包</span><br><span class="line"><span class="keyword">import</span> name       </span><br><span class="line"><span class="keyword">from</span> name <span class="keyword">import</span> fun_name</span><br><span class="line">格式</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 位置参数 默认参数 可变参数 关键字参数 命名关键字参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">abs</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(n,(<span class="built_in">int</span>,<span class="built_in">float</span>)):     <span class="comment"># 没有默认值的参数</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> -n</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">m=<span class="string">&#x27;hello&#x27;</span></span>)          <span class="comment"># 带有默认值的参数</span></span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">*l</span>)                  <span class="comment"># 可变参数   本质是一个tuple</span></span><br><span class="line">    <span class="built_in">sum</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> l:</span><br><span class="line">        <span class="built_in">sum</span>=<span class="built_in">sum</span>+n;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>; </span><br><span class="line"><span class="built_in">sum</span>(<span class="built_in">list</span>[<span class="number">0</span>],<span class="built_in">list</span>[<span class="number">1</span>],<span class="built_in">list</span>[<span class="number">2</span>])</span><br><span class="line"><span class="built_in">sum</span>(*<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printf</span>(<span class="params">**kw</span>)                  <span class="comment"># 关键字参数   本质是一个dict</span></span><br><span class="line">   <span class="keyword">for</span> k,v <span class="keyword">in</span> kw.items():</span><br><span class="line">        <span class="built_in">print</span>(k,v)</span><br><span class="line">printf(city=<span class="string">&#x27;Beijing&#x27;</span>)</span><br><span class="line">prntf(**<span class="built_in">dict</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, *, city, job</span>):    <span class="comment"># 命名关键字参数  限制传入key-value</span></span><br><span class="line"> <span class="built_in">print</span>(name, age, city, job) </span><br></pre></td></tr></table></figure><h2 id="控制结构">控制结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python中用缩进来表示不同的代码块</span></span><br><span class="line"><span class="number">1.</span> 分支结构</span><br><span class="line">   <span class="keyword">if</span> age&lt;<span class="number">18</span>:          <span class="comment"># else if =&gt; elif     and (&amp;&amp;) or (||) not (!)</span></span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;未成年&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;已成年&quot;</span>)</span><br><span class="line">    swtich python3<span class="number">.10</span>.*才有</span><br><span class="line">    </span><br><span class="line"><span class="number">2.</span> 循环结构  </span><br><span class="line">   <span class="keyword">for</span> ... <span class="keyword">in</span> ...   <span class="comment"># 要是可迭代的数据类型</span></span><br><span class="line">   <span class="keyword">import</span> Collocations</span><br><span class="line">   <span class="built_in">isinstance</span>(  ,Iterable)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL学习</title>
      <link href="/2022/08/25/Mysql/SQL/"/>
      <url>/2022/08/25/Mysql/SQL/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_45173404/article/details/115712758?ops_request_misc=%7B%22request%5Fid%22%3A%22164290361316780271529917%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=164290361316780271529917&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-3-115712758.pc_search_result_control_group&amp;utm_term=MySQL&amp;spm=1018.2226.3001.4187"> MySQL学习教程</a></p><h2 id="数据库">数据库</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">net start mysql 开启MySQL服务</span><br><span class="line">net stop mysql 关闭MySQL服务</span><br><span class="line">sc delete severname 删除指定服务</span><br><span class="line"><span class="number">1.</span> mysql -u root -p        <span class="comment">//登录MySQL</span></span><br><span class="line"><span class="number">2.</span> create database database_name; <span class="comment">//创建新数据库</span></span><br><span class="line"><span class="number">3.</span> drop database database_name;          <span class="comment">//删除数据库</span></span><br><span class="line"><span class="number">4.</span> mysqldump -u root -p密码 -B <span class="title function_">database_name</span> <span class="params">(table_name)</span> &gt; 路径-文件名.sql <span class="comment">//备份数据库---Doc命令下执行</span></span><br><span class="line"><span class="number">5.</span> source 路径-文件名.sql;    <span class="comment">//恢复数据库---mysql下执行</span></span><br><span class="line"><span class="number">6.</span> show databases;        <span class="comment">//显示所有数据库</span></span><br><span class="line"><span class="number">7.</span> show create database db_name;         <span class="comment">//查看数据库类型</span></span><br></pre></td></tr></table></figure><h2 id="表">表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> create table <span class="title function_">table_name</span> <span class="params">(column_name datatype,...)</span>;<span class="comment">//创建表</span></span><br><span class="line"><span class="number">2.</span> drop table table_name;       <span class="comment">//删除表</span></span><br><span class="line"><span class="number">3.</span> show tables;                                 <span class="comment">//显示所有表</span></span><br><span class="line"><span class="number">4.</span> desc  table_name;                                             <span class="comment">//显示表的表头信息</span></span><br><span class="line"><span class="number">5.</span> rename tabale old_name to new_name;                           <span class="comment">//更改表名</span></span><br><span class="line"><span class="number">6.</span> show tables; <span class="comment">//显示所有表</span></span><br><span class="line"><span class="comment">// select 查询</span></span><br><span class="line"><span class="comment">// 1. 单表</span></span><br><span class="line"><span class="number">1.</span> select [distinct] * | column_name from table_name;            <span class="comment">//显示某表的信息  distinct去重</span></span><br><span class="line"><span class="number">2.</span> select * | column_name from table_name where limit;           <span class="comment">//条件查询 </span></span><br><span class="line">    <span class="comment">//   where 常用运算符</span></span><br><span class="line">    <span class="comment">//   and   or   not</span></span><br><span class="line">    <span class="comment">//   &gt;   &lt;    =    !=   &gt;=   &lt;=</span></span><br><span class="line">    <span class="comment">//   between num1 and num2          闭区间</span></span><br><span class="line">    <span class="comment">//   in(num1,num2,num3......)       </span></span><br><span class="line">    <span class="comment">//   like(not like)&#x27;李%&#x27;            模糊查询     % 表示任意的多个字符  _ 表示任意的单个字符</span></span><br><span class="line">    <span class="comment">//   is null                        是否为空</span></span><br><span class="line"><span class="number">3.</span> select * | column_name from table_name order by object <span class="title function_">rule</span><span class="params">( asc 默认 | desc )</span><span class="comment">//查询并按一定顺序显示</span></span><br><span class="line"><span class="number">4.</span> select * | column_name from table_name where limit; order by object <span class="title function_">rule</span><span class="params">( asc 默认 | desc )</span>   <span class="comment">//综合运用</span></span><br><span class="line"><span class="number">5.</span> select * | column_name [ (表达式) ] as other_name from table_name;          <span class="comment">// as 取别名---表达式</span></span><br><span class="line"><span class="comment">// 2. 多表</span></span><br><span class="line"><span class="number">1.</span> select ... limit start , rows ;                    <span class="comment">//limit rows * (页数-1) , 每页显示行数</span></span><br><span class="line"><span class="comment">// 顺序</span></span><br><span class="line">  group by   having -&gt; order by -&gt; limit</span><br><span class="line"><span class="comment">// 多表查询</span></span><br><span class="line">   select ... from table1 , table2 , table3 ...   </span><br><span class="line"><span class="comment">// 返回结果为笛卡尔集,组合排序 行数 = n1 * n2 * n3 *...</span></span><br><span class="line">   select ... table.same_column from table1 , table2 , table3 ... where table1.column __ table2.column...</span><br><span class="line"><span class="comment">// 限制条件至少为 表数-1</span></span><br><span class="line"><span class="comment">// 自链接</span></span><br><span class="line">   在一张表中的查询,一张表当成两张表 但 要取别名,其余同多表查询</span><br><span class="line"><span class="comment">// 子查询</span></span><br><span class="line"><span class="number">1.</span> 将查询的结果作为 另一个查询的参数 ,多行查询 in</span><br><span class="line"><span class="number">2.</span> 将查询的结果作为另一个查询的  临时表</span><br><span class="line"><span class="comment">// all 与 any</span></span><br><span class="line"><span class="number">1.</span> all() 所有</span><br><span class="line"><span class="number">2.</span> any() 其中一个</span><br><span class="line"><span class="comment">// 多列子查询</span></span><br><span class="line">   select...from ... where (  ,  ,  )=(select...from ... )</span><br><span class="line"><span class="comment">//复制</span></span><br><span class="line">  insert into <span class="title function_">table1</span> <span class="params">(..., .... ,....)</span> select ... from table2</span><br><span class="line">  insert into table1  select ... from table1                    <span class="comment">//自我复制</span></span><br><span class="line"><span class="comment">// 创建一张结构相同表   create table new_table like old_table </span></span><br><span class="line"><span class="comment">//合并程序</span></span><br><span class="line"><span class="number">1.</span> union                            <span class="comment">//去重合并</span></span><br><span class="line"><span class="number">2.</span> union all                        <span class="comment">//不去重合并</span></span><br><span class="line"><span class="comment">// 外连接</span></span><br><span class="line"><span class="number">1.</span> 左外连接                          <span class="comment">//左表完全显示</span></span><br><span class="line">   select ... from table1 left join table table2 on limit</span><br><span class="line"><span class="number">2.</span> 右外链接                          <span class="comment">//右表完全显示</span></span><br><span class="line">   select ... from table1 right join table table2 on limit</span><br><span class="line"><span class="comment">// 在多表查询中应用</span></span><br><span class="line"><span class="comment">//mysql约束</span></span><br><span class="line">  约束用于确保数据库满足特定的商业规则,mysql中有五中约束 not <span class="literal">null</span>, unique, primary key, foreign key, check</span><br><span class="line"><span class="comment">// primary key</span></span><br><span class="line">   用于创建表时使用,目的数据不能重复,不能为空,最多有一个主键(包括复合主键),两种表示方法</span><br><span class="line">   create table <span class="title function_">table_name</span><span class="params">( column datatype primary key, ... , ... )</span></span><br><span class="line">   create table <span class="title function_">table_name</span><span class="params">( ... , ... , ... , primary key( ... , ... )</span>)</span><br><span class="line">   复合主键 primary <span class="title function_">key</span><span class="params">( a , b )</span>  a + b 同时不能相等</span><br><span class="line"><span class="comment">// unique</span></span><br><span class="line">   用于创建表时使用,目的数据不能重复,可以有多个unique               <span class="comment">// unique not null = primary key</span></span><br><span class="line"><span class="comment">// foreign key</span></span><br><span class="line">   应用于主从表中,表的类型必须为innodb,先创建主表必需具有主键或uniqe约束,一旦建立不能随意删除其中一表数据</span><br><span class="line">   create table <span class="title function_">table_name1</span><span class="params">( column datatype primary key, ... , ... )</span></span><br><span class="line">   create table <span class="title function_">table_name2</span><span class="params">( column datatype, ... , foreign key()</span> references <span class="title function_">table_name</span><span class="params">( column datatype)</span> )</span><br><span class="line"><span class="comment">// check</span></span><br><span class="line">   mysql <span class="number">5.7</span> 中只做语法校验并不生效</span><br><span class="line"><span class="comment">// enum(str,str)枚举</span></span><br><span class="line"><span class="comment">//自增长</span></span><br><span class="line">  字段名 整型 primary key auto_increment</span><br><span class="line"><span class="comment">// 索引</span></span><br><span class="line">    提高查询速度但会占用一定内存空间,原理以树的形式储存</span><br><span class="line">    show indexs from table_name              <span class="comment">//查找索引</span></span><br><span class="line">    show indexes from table_name</span><br><span class="line">    show keys from table_name</span><br><span class="line">  <span class="number">1.</span> 主键索引 ( primary key ) <span class="number">2.</span> 唯一索引 ( unique ) <span class="number">3.</span>普通索引 ( index ) <span class="number">4.</span>全文索引(通常用全文搜索)</span><br><span class="line">    create [unique] index column_index on <span class="title function_">table_name</span> <span class="params">( column )</span>      <span class="comment">//添加索引</span></span><br><span class="line">    alter table table_name add index <span class="title function_">column_index</span> <span class="params">( column )</span>         <span class="comment">//添加索引</span></span><br><span class="line">    drop index index_name on table                                   <span class="comment">//删除索引</span></span><br><span class="line">    alter table table_name drop index index_name</span><br><span class="line"><span class="comment">//事务</span></span><br><span class="line">  一组命令  保证数据的一致性</span><br><span class="line">    start transaction        <span class="comment">//开始事务</span></span><br><span class="line">    savepoint point_name     <span class="comment">//设置保持点               </span></span><br><span class="line">    rollback to point_name   <span class="comment">//回滚到指定保存点</span></span><br><span class="line">    rollback                 <span class="comment">//回滚到初始保存点</span></span><br><span class="line">    commit                   <span class="comment">//提交事务</span></span><br><span class="line"><span class="comment">// 隔离级别------事务关联</span></span><br><span class="line">   没有设置隔离级别的后果:</span><br><span class="line">   <span class="number">1.</span> 脏读          <span class="comment">//没有提交时读取过程量</span></span><br><span class="line">   <span class="number">2.</span> 不可重复读    <span class="comment">//提交时读取修改 删除量</span></span><br><span class="line">   <span class="number">3.</span> 幻读         <span class="comment">//提交时读取新增量</span></span><br><span class="line">   select @<span class="meta">@tx_isolation</span>              <span class="comment">//查看当前的隔离级别</span></span><br><span class="line">   select global.@<span class="meta">@tx_isolation</span>       <span class="comment">//查看当前系统的隔离级别</span></span><br><span class="line">   set session transaction ioslation level ________   <span class="comment">//设置隔离级别</span></span><br><span class="line">   set global. transaction ioslation level ________   <span class="comment">//设置系统隔离级别</span></span><br><span class="line">   隔离级别类型:                             脏读      不可重复读      幻读    加锁读</span><br><span class="line">   <span class="number">1.</span> 读取未提交(read uncommitted)            <span class="number">1</span>            <span class="number">1</span>            <span class="number">1</span>       <span class="number">0</span></span><br><span class="line">   <span class="number">2.</span> 读取已提交(read committed)              <span class="number">0</span>            <span class="number">1</span>            <span class="number">1</span>       <span class="number">0</span>  </span><br><span class="line">   <span class="number">3.</span> 可重复读取(repeatable read)             <span class="number">0</span>            <span class="number">0</span>            <span class="number">0</span>       <span class="number">0</span></span><br><span class="line">   <span class="number">4.</span> 可串行化(serializable)                  <span class="number">0</span>            <span class="number">0</span>            <span class="number">0</span>       <span class="number">1</span></span><br><span class="line"><span class="comment">// 视图</span></span><br><span class="line">   用于限制用户查看表的内容,只有表头其内容映射于基表</span><br><span class="line">   create view view_name as select ... from ...        <span class="comment">//创建视图</span></span><br><span class="line">   alter view view_name as select ... from ...         <span class="comment">//修改视图</span></span><br><span class="line">   drop view view_name                                 <span class="comment">//删除视图</span></span><br><span class="line">   show create view view_name                          <span class="comment">//查看创建视图时的命令</span></span><br><span class="line"><span class="comment">// 用户管理</span></span><br><span class="line">   用户信息在mysql的user中</span><br><span class="line">   create user <span class="string">&#x27;用户名&#x27;</span> @ <span class="string">&#x27;登录地址&#x27;</span> identified by <span class="string">&#x27;密码&#x27;</span>        <span class="comment">//创建用户</span></span><br><span class="line">   drop  user <span class="string">&#x27;用户名&#x27;</span> @ <span class="string">&#x27;登录地址&#x27;</span>                             <span class="comment">//删除用户</span></span><br><span class="line">   set password=password(<span class="string">&#x27;str&#x27;</span>)                                <span class="comment">//修改自己密码</span></span><br><span class="line">   set password <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span> @ <span class="string">&#x27;登录地址&#x27;</span> =password (<span class="string">&#x27;str&#x27;</span>)     <span class="comment">//修改用户密码(必须拥有对应权限)</span></span><br><span class="line">   grant 权限列表 on 库.对象 to <span class="string">&#x27;用户名&#x27;</span> @ <span class="string">&#x27;登录地址&#x27;</span> [identified by <span class="string">&#x27;密码&#x27;</span>]    <span class="comment">//给用户授权</span></span><br><span class="line">   revoke 权限列表 on 库.对象 from <span class="string">&#x27;用户名&#x27;</span> @ <span class="string">&#x27;登录地址&#x27;</span>         <span class="comment">//回收权限</span></span><br><span class="line">   flush privileges                                           <span class="comment">//刷新权限</span></span><br><span class="line"><span class="comment">// 更改表的结构(列)</span></span><br><span class="line"><span class="number">1.</span> alter table table_name add column_name datatype;             <span class="comment">//新增列</span></span><br><span class="line"><span class="number">2.</span> alter table table_name drop column_name;                      <span class="comment">//删除列</span></span><br><span class="line"><span class="number">3.</span> alter table table_name modify column_name new_datatype;      <span class="comment">//修改表的数据类型</span></span><br><span class="line"><span class="number">4.</span> alter table table_name change old_column_name new_column_name datatype;   <span class="comment">//修改列名</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="表中数据">表中数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> insert into table_name [column1,column2,...] values (data1,data2....);      <span class="comment">//插入数据</span></span><br><span class="line"><span class="number">2.</span> delete from table_name [ where limit ];                                     <span class="comment">//删除数据</span></span><br><span class="line"><span class="number">3.</span> update table_name <span class="type">set</span> <span class="variable">column_data</span> <span class="operator">=</span> data [ where limt ];                    <span class="comment">//修改数据</span></span><br></pre></td></tr></table></figure><h2 id="函数">函数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统计函数</span></span><br><span class="line"><span class="number">1.</span> select <span class="title function_">count</span><span class="params">( * | column_name )</span> from table_name where limit;                         <span class="comment">//统计函数</span></span><br><span class="line"><span class="number">2.</span> select <span class="title function_">sum</span><span class="params">( column_name1 )</span>, sum(...)... from table_name where limit;                 <span class="comment">//等列求和---数字</span></span><br><span class="line"><span class="number">3.</span> select <span class="title function_">avg</span><span class="params">( * | column_name )</span> from table_name where limit;                           <span class="comment">//列求平均   </span></span><br><span class="line"><span class="comment">// name( limit )</span></span><br><span class="line"><span class="number">4.</span> select <span class="title function_">max</span><span class="params">( * | column_name )</span> from table_name where limit;                           <span class="comment">//列最大值</span></span><br><span class="line"><span class="number">5.</span> select <span class="title function_">min</span><span class="params">( * | column_name )</span> from table_name where limit;                           <span class="comment">//列最小值</span></span><br><span class="line"><span class="number">6.</span> select ..... from table_name group by limit1,limt2 having limit;                     <span class="comment">//分组统计  having 限制</span></span><br><span class="line"><span class="comment">//字符函数</span></span><br><span class="line"><span class="number">1.</span> select <span class="title function_">charset</span><span class="params">(column)</span> from table;              <span class="comment">//返回字符集                dual系统默认空表,亚元表,系统表</span></span><br><span class="line"><span class="number">2.</span> ucase(string)                                   <span class="comment">//大写转换</span></span><br><span class="line"><span class="number">3.</span> lcase(string)                                   <span class="comment">//小写转换</span></span><br><span class="line"><span class="number">4.</span> length(string)                                  <span class="comment">//字符串的长度</span></span><br><span class="line"><span class="number">5.</span> concat(string1,string2...)                      <span class="comment">//链接字符串</span></span><br><span class="line"><span class="number">6.</span> replace(str,search_str,replace_str)             <span class="comment">//替换字符串</span></span><br><span class="line"><span class="number">7.</span> strcmp(string1,string2)                         <span class="comment">//比较字符串</span></span><br><span class="line"><span class="number">8.</span> substring(str,start,len)                        <span class="comment">//截取字符串</span></span><br><span class="line"><span class="number">9.</span> trim(str)                                       <span class="comment">//去空格</span></span><br><span class="line"><span class="comment">//数学函数</span></span><br><span class="line"><span class="number">1.</span> abs()                                           <span class="comment">//绝对值</span></span><br><span class="line"><span class="number">2.</span> pow()                                           <span class="comment">//幂运算</span></span><br><span class="line"><span class="number">3.</span> mod()                                           <span class="comment">//取余</span></span><br><span class="line"><span class="number">4.</span> bin(十进制数)                                    <span class="comment">//转换成二进制</span></span><br><span class="line"><span class="number">5.</span> hex(十进制数)                                    <span class="comment">//转换成十六进制</span></span><br><span class="line"><span class="number">6.</span> conv(number,from_base,to_base)                  <span class="comment">//进制转换</span></span><br><span class="line"><span class="number">7.</span> ceiling(number)                                 <span class="comment">//向上取整</span></span><br><span class="line"><span class="number">8.</span> floor(number)                                   <span class="comment">//向下取整</span></span><br><span class="line"><span class="number">9.</span>format(number,decimal_places)                    <span class="comment">//保留规定小数位数</span></span><br><span class="line"><span class="number">10.</span>rand([seed])                                    <span class="comment">//随机数 (0,1.0)</span></span><br><span class="line"><span class="comment">//时间函数</span></span><br><span class="line"><span class="number">1.</span> current_date()</span><br><span class="line"><span class="number">2.</span> current_time()</span><br><span class="line"><span class="number">3.</span> current_timestamp()</span><br><span class="line"><span class="number">4.</span> now()</span><br><span class="line"><span class="number">5.</span> date | time | year | hour ... (datetime)</span><br><span class="line"><span class="number">6.</span> datediff(date1,date2)</span><br><span class="line"><span class="number">7.</span> timediff(time1,time2)</span><br><span class="line"><span class="number">8.</span> date_add(date1,interval date2 unit)</span><br><span class="line"><span class="number">9.</span> time_add(time1,interval time2 unit)</span><br><span class="line"><span class="number">10.</span> time_sub(time1,interval time2 unit)</span><br><span class="line"><span class="number">11.</span> unix_timestamp()</span><br><span class="line"><span class="number">12.</span> from_unixtime()</span><br><span class="line"><span class="comment">//加密函数与系统函数</span></span><br><span class="line"><span class="number">1.</span> md5(str)                                        <span class="comment">//谨记密码不能明文保存</span></span><br><span class="line"><span class="number">2.</span> password(str)</span><br><span class="line"><span class="number">3.</span> user()                                          <span class="comment">//查询用户</span></span><br><span class="line"><span class="number">4.</span> database()                                      <span class="comment">//查询当前正在使用的数据库</span></span><br><span class="line"><span class="comment">//流程控制函数</span></span><br><span class="line"><span class="number">1.</span> <span class="keyword">if</span>( expre1 , expr2 , expr3 )                    <span class="comment">// 2 &gt; 3 ? 1 : 6</span></span><br><span class="line"><span class="number">2.</span> ifnull( expr , notnull_expr)                    <span class="comment">//空字符判断       空字符____ is null</span></span><br><span class="line"><span class="number">3.</span> select <span class="keyword">case</span> when expr1 then expr                <span class="comment">//多条件判断</span></span><br><span class="line">               when expr2 then expr</span><br><span class="line">               <span class="keyword">else</span> expr3 end;</span><br></pre></td></tr></table></figure><h2 id="SQL">SQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">select</span> 查询</span><br><span class="line"><span class="keyword">select</span> id                      <span class="comment">-- 查询整张表中的单列</span></span><br><span class="line"><span class="keyword">from</span> student       </span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> `name` ,age             <span class="comment">-- 查询整张表中的多列 用,分隔</span></span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 查询整张表中的所有列 通配符 *</span></span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> age            <span class="comment">-- 去重查询 distinct</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="operator">*</span>              <span class="comment">-- 去重查询 distinct 关键字作用于所有的列</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 限制查询记录的条数 limit num</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line">limit <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 限制查询记录的条数 offset 偏移量(起始值) 0</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line">limit <span class="number">5</span> <span class="keyword">offset</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 限制查询记录的条数 简化  limit offset,num</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line">limit <span class="number">1</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line"># 排序检索数据</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 排序检索数据 order by </span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> age</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 多个列排序 order by </span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> `name`,age   </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 按相对列位置排序</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span>,<span class="number">3</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 自定义排序 desc降序 asc升序(默认)</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- DESC关键字只应用到直接位于其前面的列名</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> `name`<span class="keyword">desc</span>,age   </span><br><span class="line"># 过滤数据</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       <span class="comment">-- 过滤数据where 表达式</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> age<span class="operator">=</span><span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在同时使用 ORDER BY 和 WHERE 子句时，应该让 ORDER BY 位于WHERE 之后</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       </span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">12</span> <span class="keyword">and</span> <span class="number">15</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       </span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;bob&#x27;</span>     <span class="comment">-- 字符串比较&#x27; &#x27;引用</span></span><br><span class="line"></span><br><span class="line"># 高级数据过滤</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                       </span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> `name`<span class="operator">=</span><span class="string">&#x27;bob&#x27;</span> <span class="keyword">and</span> age<span class="operator">&lt;</span><span class="number">18</span>   <span class="comment">-- 逻辑连接词 and or</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>                        <span class="comment">-- WHERE子句中用来指定要匹配值的清单的关键字，功能与 OR 相当</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">12</span>,<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> age <span class="keyword">in</span> (<span class="number">12</span>,<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"># 用通配符进行过滤</span><br><span class="line"><span class="comment">-- 最常使用的通配符是百分号（%）。在搜索串中，%表示任何字符出现任意次</span></span><br><span class="line">数</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> `name` <span class="keyword">like</span> `<span class="operator">%</span>明<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MakeDown基础语法</title>
      <link href="/2022/08/25/Markdown/Grammar/"/>
      <url>/2022/08/25/Markdown/Grammar/</url>
      
        <content type="html"><![CDATA[<h1>MarkDown学习</h1><h2 id="标题">标题</h2><p>井号个数/级数(最多6级)+空格</p><h2 id="字体">字体</h2><p><strong>Hello,World!</strong></p><p>字体加粗:字体两边分别加上 **</p><p><em>Hello,World!</em></p><p>字体倾斜:字体两边分别加上 *</p><p><em><strong>Hello,World!</strong></em></p><p>字体加粗+字体倾斜:字体两边分别加上 ***</p><p><s>Hello,World!</s></p><p>字体删除线:字体两边分别加上 ~~</p><h2 id="引用">引用</h2><blockquote><p>好好学习</p></blockquote><p>大于号+引用文本</p><h2 id="分割线">分割线</h2><hr><p>1.三个 ***</p><hr><p>2.三个 —</p><h2 id="图片">图片</h2><p>1.本地图片</p><p><img src="D:%5CDownloads%5Cwallhaven-v9qyx3_7680x4320.png" alt="名称"></p><p>感叹号 + [ 名称 ] + ( 本地图片地址 )</p><p>2.网络图片</p><p><img src="https://img2.baidu.com/it/u=111713540,615806613&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg" alt="名称"></p><p>感叹号 + [ 名称 ] + ( 网络图片地址 )</p><h2 id="超链接">超链接</h2><p>[ 标题 ]+( 地址 )</p><h2 id="列表">列表</h2><p>1.有序列表</p><ol><li>A</li><li>B</li></ol><p>1  +  .  +   空格  + 文本</p><p>2.无序列表</p><ul><li>A</li><li>B</li></ul><p>减号  +  空格  + 文本</p><h2 id="表格">表格</h2><p>1.快捷键(插入-&gt;表格)</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>2.输入格式</p><p>|  空格  |  空格   |   +   回车</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="代码插入">代码插入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>tab键上方三个点  +  代码语言</p><h1>快捷键</h1><p>复制:ctrl+c</p><p>粘贴:ctrl+v</p><p>保存:ctrl+s</p><p>剪切:ctrl+x</p><p>撤销:ctrl+z</p><p>关闭应用:alt+f4</p><p>运行:window+r</p><p>打开我的电脑:window+e</p><p>打开资源管理器:ctrl+shift+esc</p><h2 id="详细">详细:</h2><p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p><ol><li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li><li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li><li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li><li>全新的 <strong>KaTeX数学公式</strong> 语法；</li><li>增加了支持<strong>甘特图的mermaid语法<a href="%5Bmermaid%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E%5D(https://mermaidjs.github.io/)">^1</a></strong> 功能；</li><li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li><li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li><li>增加了 <strong>检查列表</strong> 功能。</li></ol><h2 id="功能快捷键">功能快捷键</h2><p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br>查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br>替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p><h2 id="合理的创建标题，有助于目录的生成">合理的创建标题，有助于目录的生成</h2><p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p><h2 id="如何改变文本的样式">如何改变文本的样式</h2><p><em>强调文本</em> <em>强调文本</em></p><p><strong>加粗文本</strong> <strong>加粗文本</strong></p><p>==标记文本==</p><p><s>删除文本</s></p><blockquote><p>引用文本</p></blockquote><p>H~2~O is是液体。</p><p>2^10^ 运算结果是 1024.</p><h2 id="插入链接与图片">插入链接与图片</h2><p>链接: <a href="https://www.csdn.net/">link</a>.</p><p>图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" alt="Alt"></p><p>带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw</a> =30x30)</p><p>居中的图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" alt="Alt"></p><p>居中并且带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center</a> =30x30)</p><p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p><h2 id="如何插入一段漂亮的代码片">如何插入一段漂亮的代码片</h2><p>去<a href="https://mp.csdn.net/console/configBlog">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// An highlighted block</span></span><br><span class="line"><span class="keyword">var</span> foo = <span class="string">&#x27;bar&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="生成一个适合你的列表">生成一个适合你的列表</h2><ul><li>项目<ul><li>项目<ul><li>项目</li></ul></li></ul></li></ul><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><ul><li>[ ] 计划任务</li><li>[x] 完成任务</li></ul><h2 id="创建一个表格">创建一个表格</h2><p>一个简单的表格是这么创建的：</p><table><thead><tr><th>项目</th><th>Value</th></tr></thead><tbody><tr><td>电脑</td><td>$1600</td></tr><tr><td>手机</td><td>$12</td></tr><tr><td>导管</td><td>$1</td></tr></tbody></table><h3 id="设定内容居中、居左、居右">设定内容居中、居左、居右</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右</p><table><thead><tr><th style="text-align:center">第一列</th><th style="text-align:right">第二列</th><th style="text-align:left">第三列</th></tr></thead><tbody><tr><td style="text-align:center">第一列文本居中</td><td style="text-align:right">第二列文本居右</td><td style="text-align:left">第三列文本居左</td></tr></tbody></table><h3 id="SmartyPants">SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：</p><table><thead><tr><th>TYPE</th><th>ASCII</th><th>HTML</th></tr></thead><tbody><tr><td>Single backticks</td><td><code>'Isn't this fun?'</code></td><td>‘Isn’t this fun?’</td></tr><tr><td>Quotes</td><td><code>&quot;Isn't this fun?&quot;</code></td><td>“Isn’t this fun?”</td></tr><tr><td>Dashes</td><td><code>-- is en-dash, --- is em-dash</code></td><td>– is en-dash, — is em-dash</td></tr></tbody></table><h2 id="创建一个自定义列表">创建一个自定义列表</h2><p>Markdown<br>:  Text-to-HTML conversion tool</p><p>Authors<br>:  John<br>:  Luke</p><h2 id="如何创建一个注脚">如何创建一个注脚</h2><p>一个具有注脚的文本。<a href="%E6%B3%A8%E8%84%9A%E7%9A%84%E8%A7%A3%E9%87%8A">^2</a></p><h2 id="注释也是必不可少的">注释也是必不可少的</h2><p>Markdown将文本转换为 HTML。</p><p>*[HTML]:   超文本标记语言</p><h2 id="KaTeX数学公式">KaTeX数学公式</h2><p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/">KaTeX</a>:</p><p>Gamma公式展示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mspace width="1em"/><mi mathvariant="normal">∀</mi><mi>n</mi><mo>∈</mo><mi mathvariant="double-struck">N</mi></mrow><annotation encoding="application/x-tex">\Gamma(n) = (n-1)!\quad\foralln\in\mathbb N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)!</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">∀</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">N</span></span></span></span> 是通过欧拉积分</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Γ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant="normal">∞</mi></msubsup><msup><mi>t</mi><mrow><mi>z</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>e</mi><mrow><mo>−</mo><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mtext> </mtext><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3262em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8436em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">.</span></span></span></span></span></p><blockquote><p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p></blockquote><h2 id="新的甘特图功能，丰富你的文章">新的甘特图功能，丰富你的文章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line">        section 现有任务</span><br><span class="line">        已完成               :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        进行中               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        计划一               :         des3, after des2, 5d</span><br><span class="line">        计划二               :         des4, after des3, 5d</span><br></pre></td></tr></table></figure><ul><li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li></ul><h2 id="UML-图表">UML 图表</h2><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/">Mermaid</a>. 例如下面产生的一个序列图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?</span><br><span class="line">李四--&gt;&gt;王五: 你最近怎么样，王五？</span><br><span class="line">李四--x 张三: 我很好，谢谢!</span><br><span class="line">李四-x 王五: 我很好，谢谢!</span><br><span class="line">Note right of 王五: 李四想了很长时间, 文字太长了&lt;br/&gt;不适合放在一行.</span><br><span class="line"></span><br><span class="line">李四--&gt;&gt;张三: 打量着王五...</span><br><span class="line">张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</span><br></pre></td></tr></table></figure><p>这将产生一个流程图。:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[长方形] -- 链接 --&gt; B((圆))</span><br><span class="line">A --&gt; C(圆角长方形)</span><br><span class="line">B --&gt; D&#123;菱形&#125;</span><br><span class="line">C --&gt; D</span><br></pre></td></tr></table></figure><ul><li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/">这儿</a>,</li></ul><h2 id="FLowchart流程图">FLowchart流程图</h2><p>我们依旧会支持flowchart的流程图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flowchat</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 我的操作</span><br><span class="line">cond=&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><ul><li>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http:/">这儿</a>.</li></ul><h2 id="导出与导入">导出与导入</h2><h3 id="导出">导出</h3><p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p><h3 id="导入">导入</h3><p>如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br>继续你的创作。</p>]]></content>
      
      
      <categories>
          
          <category> MakeDown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali学习</title>
      <link href="/2022/08/25/Linux/Kali/"/>
      <url>/2022/08/25/Linux/Kali/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1.<span class="built_in">cd</span> 进入文件</span><br><span class="line">2.<span class="built_in">ls</span> 查看当前目录下存在的文件及目录</span><br><span class="line">3.<span class="built_in">cp</span> 复制</span><br><span class="line">4.clear 清屏</span><br><span class="line">5.tar -zxvf 解压</span><br><span class="line">6.leafpad 一个编译器</span><br><span class="line">7.apt-get update 更新源</span><br><span class="line">8.<span class="built_in">cat</span> 查看文本</span><br><span class="line">tab 自动补全命令</span><br><span class="line"></span><br><span class="line">nmap的使用:</span><br><span class="line">空格 查看进度</span><br><span class="line">nmap + ip / 域名 (简单扫描)</span><br><span class="line">nmap + ip网段 (扫描目标网段机器其他主机)</span><br><span class="line">nmap -A -T4 + ip (对目标全面扫描)</span><br><span class="line">nmap --top-ports 100 +ip (扫描常见的100个端口)</span><br><span class="line">nmap -sS -sV -T4 + ip (采用sS模式.T4级别扫描目标的端口.服务.操作系统的版本)</span><br><span class="line">nmap --script=vuln + ip (采用vulu脚本扫描)</span><br><span class="line">    </span><br><span class="line">shydra的使用:</span><br><span class="line">协议的爆破(使用字典)</span><br><span class="line">ssh   xshell连接</span><br><span class="line"></span><br><span class="line">crunch的使用:</span><br><span class="line">字典生成器</span><br><span class="line">1.crunch min max &gt; name.txt   默认26个英文字母</span><br><span class="line">2.crunch min max -t admin%% &gt; name.txt -t指定格式 (%数字 ^特殊符号 @小写字母 .大写字母)</span><br><span class="line">3.crunch min max -p pad 123 -o name.txt -p指定组合 -o/&gt;</span><br><span class="line">4.crunch min max -f /usr/share/crunch/charset/lst hex -o name.txt 指定crunch库中的模板来生成</span><br><span class="line">5.crunch min max 56555 &gt; name.txt 指定数</span><br><span class="line">    </span><br><span class="line">ettercap的使用:</span><br><span class="line">dns劫持</span><br><span class="line">开启apache2服务</span><br><span class="line">systemctl start/stop apache2</span><br><span class="line">1.伪造页面 /var/apache/www/html</span><br><span class="line">2.配置ettercap leafpad /etc/ettercap/ettercap.dns</span><br><span class="line">  * A kali ip地址  (ip a)</span><br><span class="line">  * PTR kali ip地址</span><br><span class="line">3.启动ettercap ettercap -G</span><br><span class="line">4.扫描网络</span><br><span class="line">5.启用dns欺骗</span><br><span class="line">6.调用模板</span><br><span class="line"></span><br><span class="line">dirbuster的使用:</span><br><span class="line">网站目录扫描</span><br><span class="line">1.dirbuster</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java连接数据库</title>
      <link href="/2022/08/25/Java/JDBC/"/>
      <url>/2022/08/25/Java/JDBC/</url>
      
        <content type="html"><![CDATA[<h1>步骤</h1><ol><li>加载相应的驱动程序</li><li>获取链接对象</li><li>获取执行sql的对象</li><li>执行sql      查询    更新</li><li>关闭链接</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> </span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.mysql.jdbc.Driver();</span><br><span class="line">        <span class="comment">//2.获取链接</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://localhost:3306/students&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.setProperty(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;24680&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connect</span> <span class="operator">=</span> driver.connect(url, properties);</span><br><span class="line">        <span class="comment">//3.进行操作</span></span><br><span class="line">        String sql=<span class="string">&quot;create table teacher(name varchar(25)); &quot;</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connect.createStatement();</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">        System.out.println(rows&gt;<span class="number">0</span>?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">        <span class="comment">//4.关闭链接</span></span><br><span class="line">        statement.close();</span><br><span class="line">        connect.close();  </span><br><span class="line"><span class="number">2.</span></span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        Driver driver= (Driver)aClass.newInstance();</span><br><span class="line">        <span class="comment">//2.获取链接</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://localhost:3306/students&quot;</span>;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.setProperty(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;24680&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connect</span> <span class="operator">=</span> driver.connect(url, properties);</span><br><span class="line">        <span class="comment">//3.进行操作</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment">//4.关闭链接</span></span><br><span class="line">  </span><br><span class="line"><span class="number">3.</span></span><br><span class="line">       <span class="comment">//1.加载驱动</span></span><br><span class="line">    </span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        Driver driver= (Driver)aClass.newInstance();</span><br><span class="line">        <span class="comment">//2.获取链接</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://localhost:3306/students&quot;</span>;</span><br><span class="line">        String user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password=<span class="string">&quot;24680&quot;</span>;</span><br><span class="line">        DriverManager.registerDriver(driver);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">        <span class="comment">//3.进行操作</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//4.关闭链接</span></span><br><span class="line">        </span><br><span class="line"><span class="number">4.</span></span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">//2.获取链接</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://localhost:3306/students&quot;</span>;</span><br><span class="line">        String user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password=<span class="string">&quot;24680&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">        <span class="comment">//3.进行操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.关闭链接</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>      推荐使用</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">filename</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;filename&quot;</span>));</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> filename.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> filename.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> filename.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> filename.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        Class.forName(driver);</span><br><span class="line">        <span class="comment">//2.获取链接</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">        <span class="comment">//3.进行操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.关闭链接</span></span><br><span class="line"></span><br><span class="line">        mysql-contents-java驱动包<span class="number">8</span>之后 无需注册驱动</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法</title>
      <link href="/2022/08/25/Java/Grammar/"/>
      <url>/2022/08/25/Java/Grammar/</url>
      
        <content type="html"><![CDATA[<h2 id="转义字符">转义字符</h2><p><img src="https://img-blog.csdnimg.cn/2019071116145921.png" alt="转义字符"></p><h2 id="细节">细节</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Java中一切皆对象,换言之类,接口  同C一样main函数是程序的入口</span><br><span class="line">编写Java源代码 (*.java) -&gt; 编译成字节码文件 (*.class) -&gt;由JVM运行  重要的是字节码文件</span><br><span class="line">字节是计算机存储的基本单位</span><br><span class="line">+ 字符串的拼接</span><br><span class="line">命名规则: 包名-反域名 类名-大驼峰 方法名&amp;&amp;变量名-小驼峰 常量-大写</span><br><span class="line">方法的重载      类中的同名方法</span><br><span class="line">方法的重写      类的继承,子类重写父类</span><br><span class="line">== 只是判断引用地址是否相同 </span><br><span class="line">声明与创建是两个不同的概念</span><br><span class="line">如果对方法的返回值不感兴趣，所有返回值类型非空的方法都可以当作语句调用。</span><br><span class="line">动态绑定: 动态绑定工作机制如下：假设对象o是类C <span class="number">1</span>，C <span class="number">2</span>，…，C n-<span class="number">1</span>，C n的实例，其中C <span class="number">1</span>是C <span class="number">2</span>的子类，C <span class="number">2</span>是 C <span class="number">3</span>的子类，…，C n-<span class="number">1</span>是C n的子类，如图<span class="number">9</span>-<span class="number">4</span>所示。也就是说，C n是最一般的类，C <span class="number">1</span>是最特殊的类。在Java中，Cn是Object类。如果对象o调用一个方法p ，Java虚拟机依次在类C <span class="number">1</span>，C <span class="number">2</span>，…，C n-<span class="number">1</span>， C n中查找方法p的实现，直到找到为止。一旦找到一个实现，停止查找并调用这个第一次找到的实现。</span><br></pre></td></tr></table></figure><h2 id="修饰符">修饰符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>                       导包</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">private</span> <span class="keyword">protected</span>     类的继承相关</span><br><span class="line"><span class="keyword">static</span>                       方法的调用</span><br><span class="line"><span class="keyword">final</span>                        常量修饰符</span><br><span class="line"><span class="keyword">abstract</span>                     抽象类的声明</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">implements</span>         接口相关</span><br><span class="line"><span class="keyword">throws</span> <span class="keyword">throw</span> <span class="keyword">try</span> <span class="keyword">catch</span>       异常相关</span><br><span class="line"><span class="keyword">instanceof</span>                   类型转换</span><br></pre></td></tr></table></figure><h2 id="数据类型">数据类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span>  <span class="type">short</span> <span class="type">int</span> <span class="type">long</span> <span class="type">float</span> <span class="type">double</span> <span class="type">char</span> <span class="type">boolean</span></span><br><span class="line"><span class="type">long</span>  ...L</span><br><span class="line"><span class="type">float</span> ...F</span><br><span class="line">十六进制数 0x....</span><br><span class="line">单字符(数-编码)</span><br><span class="line">字符串 &gt; 数   type.parsetype(String);</span><br></pre></td></tr></table></figure><h2 id="类型转化">类型转化</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">低---&gt;高</span><br><span class="line">    </span><br><span class="line"><span class="type">byte</span>,<span class="type">char</span> --&gt;<span class="type">short</span> --&gt; <span class="type">int</span> --&gt; <span class="type">long</span> --&gt; <span class="type">float</span> --&gt; <span class="type">double</span></span><br><span class="line"></span><br><span class="line">格式 :  (类型)数字</span><br><span class="line"></span><br><span class="line">低转高自转,高转低强转 </span><br><span class="line"></span><br><span class="line">强转注意:   浮点数强转整型精度损失</span><br><span class="line">    </span><br><span class="line">            注意内存溢出</span><br><span class="line">    </span><br><span class="line">            <span class="type">boolean</span>值不能转换</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">32767</span>;</span><br><span class="line">        <span class="type">char</span> b=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println((<span class="type">int</span>)b);</span><br><span class="line">        System.out.println((<span class="type">short</span>)a);</span><br><span class="line">    &#125;</span><br><span class="line">Match类</span><br></pre></td></tr></table></figure><h2 id="变量">变量</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> 种类 :</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 类变量     </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 实例变量   <span class="keyword">static</span> 静态变量 : 一个类中的所有实例共享数据</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 局部变量</span><br><span class="line"></span><br><span class="line">变量命名规则 : (驼峰命名)</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 类名首字母大写</span><br><span class="line">    </span><br><span class="line"><span class="number">2.</span> 类成员名首字母小写</span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span> 常量名全部大写</span><br></pre></td></tr></table></figure><h2 id="分支语句与循环语句">分支语句与循环语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">if</span>...<span class="keyword">else</span>...</span><br><span class="line"><span class="number">2.</span> <span class="keyword">switch</span>()&#123;</span><br><span class="line">    <span class="keyword">case</span> . :</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:                   </span><br><span class="line"> &#125;</span><br><span class="line"><span class="number">3.</span> <span class="keyword">while</span>()&#123;&#125;</span><br><span class="line"><span class="number">4.</span><span class="keyword">do</span>-<span class="keyword">while</span></span><br><span class="line"><span class="number">5.</span><span class="keyword">for</span>()</span><br><span class="line">格式化输入</span><br><span class="line"> System.out.printf(<span class="string">&quot;%d,%f,%c...&quot;</span>,var1,var2...);</span><br></pre></td></tr></table></figure><h2 id="数组">数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> element: arr)&#123;&#125;    不用下标,对数组的每一个元素执行相同的操作</span><br><span class="line">arr是引用(名字),<span class="keyword">new</span> <span class="title class_">int</span>[]分配空间</span><br><span class="line">变长变量 <span class="type">int</span>... name</span><br><span class="line">Arrary类</span><br></pre></td></tr></table></figure><h2 id="进制">进制</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">0b10101</span>; <span class="comment">//   二进制 0b开头</span></span><br><span class="line"><span class="type">int</span> b=<span class="number">63022</span>;     <span class="comment">//   十进制</span></span><br><span class="line"><span class="type">int</span> c=<span class="number">06573</span>;     <span class="comment">//   八进制 0开头</span></span><br><span class="line"><span class="type">int</span> d=<span class="number">0x96325</span>;           <span class="comment">//   十六进制 0x开头</span></span><br><span class="line">System.out.println(<span class="string">&quot;a=&quot;</span>+a+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b=&quot;</span>+b+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;c=&quot;</span>+c+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;d=&quot;</span>+d); <span class="comment">// tip: \n 转义字符 换行</span></span><br></pre></td></tr></table></figure><h2 id="原码-反码-补码">原码 反码 补码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>  最高位为符号位 正 <span class="number">0</span> 负 <span class="number">1</span> </span><br><span class="line"><span class="number">2.</span>  正数和 <span class="number">0</span> 的原码,反码,补码一样(三码合一)</span><br><span class="line"><span class="number">3.</span>  负数的反码 = 原码的符号位不变 + 其余位取反</span><br><span class="line">    负数的补码 = 负数的反码 + <span class="number">1</span></span><br><span class="line"><span class="number">4.</span>  Java中都是有符号数</span><br><span class="line"><span class="number">5.</span>  计算机以补码的形式进行运算,以原码的形式显示   </span><br></pre></td></tr></table></figure><h2 id="位运算">位运算</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;   |   &lt;&lt;   &gt;&gt;   ^   ~</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>  &amp;    有<span class="number">0</span>为<span class="number">0</span></span><br><span class="line"><span class="number">2.</span>  |     有<span class="number">1</span>为<span class="number">1</span></span><br><span class="line"><span class="number">3.</span>  ^    相同为<span class="number">0</span>不同为<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="类与对象">类与对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> 类名() 开辟对象空间</span><br><span class="line">类名 name  对象名(引用对象)</span><br><span class="line">类名 name = <span class="keyword">new</span> 类名() ;</span><br><span class="line">内存分配:</span><br><span class="line">栈区-----------堆区--------方法区(常量池)</span><br><span class="line">创建对象:</span><br><span class="line"><span class="number">1.</span> 先声明,再创建</span><br><span class="line">   类名 name;</span><br><span class="line">   name = <span class="keyword">new</span> 类名();</span><br><span class="line"><span class="number">2.</span> 直接创建</span><br><span class="line">   类名 name = <span class="keyword">new</span> 类名() ;</span><br><span class="line">综上: name指向的是一个地址</span><br><span class="line">方法的调用机制:</span><br><span class="line">调用方法时,系统开辟一个独立的栈空间用于存放临时变量,当方法执行完后,该临时空间释放</span><br><span class="line">(当main栈释放时程序结束)</span><br><span class="line"> java中只有值传递,引用类型值为地址</span><br><span class="line">比较量对象是否相等:</span><br><span class="line"><span class="number">1.</span> <span class="number">1</span> == <span class="number">2</span></span><br><span class="line"><span class="number">2.</span> hashcode</span><br><span class="line">递归:</span><br><span class="line">目标:  阶乘 斐波那契数列 猴子吃桃(逆推) 汉诺塔 八皇后</span><br><span class="line">汉诺塔:</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Tower</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">move</span><span class="params">(<span class="type">int</span> num, <span class="type">char</span> a, <span class="type">char</span> b, <span class="type">char</span> c)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(a + <span class="string">&quot;-&gt;&quot;</span> + c);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                move(num - <span class="number">1</span>, a, c, b);</span><br><span class="line">                System.out.println(a + <span class="string">&quot;-&gt;&quot;</span> + c);</span><br><span class="line">                move(num - <span class="number">1</span>, b, a, c);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">全局变量有默认值,局部变量要赋初值</span><br><span class="line">构造器</span><br><span class="line">javap反编译</span><br><span class="line">创见对象的流程分析</span><br><span class="line"><span class="built_in">this</span>指针:</span><br><span class="line"><span class="number">1.</span> 当前对象</span><br><span class="line"><span class="number">2.</span> 变量名</span><br><span class="line">tip: 地址-&gt;hashcode()</span><br><span class="line"><span class="built_in">this</span> 访问属性 方法 构造器</span><br><span class="line">只能在构造器中调用构造器且必须放在第一行</span><br><span class="line">包(文件夹):</span><br><span class="line">命名规则:com.公司名.项目名.模块名</span><br><span class="line">常用包:</span><br><span class="line">java.lang.* 基础包</span><br><span class="line">java.util.* 工具包</span><br><span class="line">java.net.*  网络包</span><br><span class="line">java.awt.*  界面开发</span><br><span class="line">导入包:</span><br><span class="line">java.util.类名</span><br><span class="line">java.util.*</span><br><span class="line">继承:</span><br><span class="line">class 子类 extends 基类&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">创建种类对象时子类调用时必须调用父类的构造器(<span class="built_in">super</span>())</span><br><span class="line"><span class="built_in">super</span>必须放在构造器的第一行</span><br><span class="line">类只用单继承</span><br><span class="line">内存分配</span><br><span class="line">通过<span class="built_in">super</span>来访问父类的属性与方法及构造器</span><br><span class="line"><span class="built_in">this</span>与<span class="built_in">super</span></span><br><span class="line">方法重写:</span><br><span class="line">子父类重写函数的返回类型</span><br><span class="line">子类不能缩小父类的访问权限</span><br><span class="line">重载与重写的对比</span><br><span class="line">多态:</span><br><span class="line"><span class="number">1.</span> 方法的多态</span><br><span class="line"><span class="number">2.</span> 对象的多态</span><br><span class="line">编译类型与运行类型</span><br><span class="line">继承中的多态:<span class="number">1.</span> 向上转型 编译时看编译类型,运行时看运行类型</span><br><span class="line">            <span class="number">2.</span> 向下转型 强转父类的引用 <span class="string">&quot;类型的不变性&quot;</span></span><br><span class="line">属性的<span class="string">&quot;重写&quot;</span>取决于编译类型</span><br><span class="line"><span class="keyword">instanceof</span></span><br><span class="line">java的动态绑定机制(方法:运行类型,动态绑定  属性:没有动态绑定)</span><br><span class="line">多态数组</span><br><span class="line">多态参数</span><br><span class="line">==与equals:</span><br><span class="line">== : 基本类型(数值) 应用类型(对象地址)</span><br><span class="line">equals:引用类型Object(对象的地址)</span><br><span class="line">jdk源码查看:ctrl + b</span><br><span class="line">equals重写</span><br><span class="line">hashCode()</span><br><span class="line"><span class="keyword">static</span>:</span><br><span class="line"><span class="number">1.</span>实例对象共享</span><br><span class="line"><span class="number">2.</span>可以直接调用不用创建对象</span><br><span class="line">mian:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line"><span class="number">1.</span>jvm调用</span><br><span class="line"><span class="number">2.</span>java程序运行时传入参数</span><br><span class="line"> 代码块:</span><br><span class="line">对构造器的补充,构造器调用时调用代码块</span><br><span class="line">[<span class="keyword">static</span>]&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">静态代码块:</span><br><span class="line">在类加载时,只加载一次,只执行一次</span><br><span class="line">类加载:</span><br><span class="line"><span class="number">1.</span>创建实例对象时</span><br><span class="line"><span class="number">2.</span>调用子类时父类先被加载</span><br><span class="line"><span class="number">3.</span>调用类的属性或方法时该类被加载</span><br><span class="line">普通代码块:</span><br><span class="line">对象创建时隐式调用(多次调用)</span><br><span class="line">调用顺序:</span><br><span class="line"><span class="number">1.</span>静态代码块和静态属性初始化</span><br><span class="line"><span class="number">2.</span>普通代码块和普通属性初始化</span><br><span class="line"><span class="number">3.</span>构造器</span><br><span class="line"><span class="keyword">final</span>(最终的,最后的):       <span class="comment">//const 常量</span></span><br><span class="line">类 方法 属性 局部变量        <span class="comment">//不允许改变</span></span><br><span class="line">抽象类(<span class="keyword">abstract</span>):          <span class="comment">//virtual</span></span><br><span class="line">方法抽象前提类抽象</span><br><span class="line">注意:</span><br><span class="line"><span class="number">1.</span>抽象类不能实例化</span><br><span class="line"><span class="number">2.</span><span class="keyword">abstract</span>只能修饰类和方法</span><br><span class="line"><span class="number">3.</span>一个类一旦继承抽象类必须重写所有抽象方法除非它是<span class="keyword">abstract</span></span><br><span class="line">接口(interface):             <span class="comment">//可以多继承</span></span><br><span class="line">多个抽象方法封装在一起</span><br><span class="line">接口继承implement</span><br><span class="line">枚举:</span><br><span class="line"><span class="number">1.</span>自定义</span><br><span class="line">  构造器私有</span><br><span class="line">  在类内部创建枚举对象</span><br><span class="line">  对外暴露 <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span></span><br><span class="line"><span class="number">2.</span><span class="keyword">enum</span></span><br><span class="line">  <span class="title class_">enum</span>代替<span class="keyword">class</span></span><br><span class="line">  <span class="title class_">ENUM</span>代替在类内部创建枚举对象</span><br><span class="line">异常:</span><br><span class="line">当程序出现异常时程序得以向下运行</span><br></pre></td></tr></table></figure><h2 id="字符串">字符串</h2><p><a href="https://blog.csdn.net/weixin_43860260/article/details/91417485?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=java%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-91417485.nonecase&amp;spm=1018.2226.3001.4187">java正则表达式</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">String 的实例对象不能改变</span><br><span class="line">字符串 &lt;-&gt; 字符数组</span><br><span class="line">字符串 &lt;-&gt; 数</span><br><span class="line">字符串 &lt;-&gt; 字符串缓冲</span><br><span class="line">StringBuffer/StringBuilder  的实例对象能改变</span><br><span class="line">正则表达式:</span><br><span class="line">定义:是一个用来描述字符串匹配模式的一个表达式</span><br><span class="line">\d 数字</span><br><span class="line">\D 非数字</span><br><span class="line">\s 所有的<span class="string">&quot;空格&quot;</span></span><br><span class="line">\S 所有的非<span class="string">&quot;空格&quot;</span> </span><br><span class="line">\w 字母+数字</span><br><span class="line">\W 除了字母+数字</span><br><span class="line">x  具体的字符串</span><br><span class="line">.  任意的所有单字符</span><br><span class="line">(ab|cd) ab或cd</span><br><span class="line">[ABC] A或B或C</span><br><span class="line">[^ABC] 除了ABC</span><br><span class="line">[A-Z] A到Z</span><br><span class="line"></span><br><span class="line">p* p模式<span class="number">0</span>到多次</span><br><span class="line">p+ p模式<span class="number">1</span>到多次  </span><br><span class="line">p? p模式<span class="number">0</span>到<span class="number">1</span>次</span><br><span class="line">p&#123;n&#125; p模式精准匹配n次</span><br><span class="line">p&#123;n,&#125; p模式匹配n次到多次  </span><br><span class="line">p&#123;n,m&#125; p模式匹配n到m次  </span><br><span class="line">    </span><br><span class="line">*,+,?,&#123;n&#125;,&#123;n,&#125;和&#123;n,m&#125;称为量化器，它表明在量化器之前的模式应该重复多少次。</span><br></pre></td></tr></table></figure><h2 id="I-O">I/O</h2><p><a href="https://blog.csdn.net/jingzi123456789/article/details/72123937">JAVA：IO流 之 节点流与处理流</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">计算机中文件的存储形式是二进制(文本是二进制的加解码)</span><br><span class="line">I/O操作时注意关闭 *.close();</span><br><span class="line">一.文本读写:</span><br><span class="line"> <span class="number">1.</span>通过控制台</span><br><span class="line">  <span class="type">Scanner</span> <span class="variable">scanener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">  scanner.hasNext():Boolean</span><br><span class="line">  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">  System.out.pantln();</span><br><span class="line"> <span class="number">2.</span>文本文件</span><br><span class="line">  <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filepath);</span><br><span class="line">  <span class="type">Scanner</span> <span class="variable">scanener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(file);</span><br><span class="line">  scanner.next();</span><br><span class="line">  <span class="type">PrintWrite</span> <span class="variable">printWrite</span> <span class="operator">=</span> <span class="keyword">new</span>  <span class="title class_">PrintWrite</span>(file);</span><br><span class="line">  printeWrite.print();</span><br><span class="line">二.二进制读写:</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h2 id="集合">集合</h2><p><a href="https://blog.csdn.net/feiyanaffection/article/details/81394745?ops_request_misc=%7B%22request%5Fid%22%3A%22164463864616780261989241%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=164463864616780261989241&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-81394745.pc_search_result_control_group&amp;utm_term=java%E9%9B%86%E5%90%88&amp;spm=1018.2226.3001.4187">java集合</a></p><h2 id="反射">反射</h2><p><a href="https://blog.csdn.net/sinat_38259539/article/details/71799078?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">Java基础之—反射（非常重要）_sinat_38259539的博客-CSDN博客_jvav</a></p><p><a href="https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html">大白话说Java反射：入门、使用、原理 - 陈树义 - 博客园 (cnblogs.com)</a></p><h2 id="注解">注解</h2><p><a href="https://www.runoob.com/w3cnote/java-annotation.html">Java 注解（Annotation） | 菜鸟教程 (runoob.com)</a></p><p><a href="https://blog.csdn.net/qq1404510094/article/details/80577555?ops_request_misc=%7B%22request%5Fid%22%3A%22164285020816781683961782%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=164285020816781683961782&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-80577555.pc_search_result_control_group&amp;utm_term=java%E6%B3%A8%E8%A7%A3&amp;spm=1018.2226.3001.4187">java注解-最通俗易懂的讲解_Tanyboye的博客-CSDN博客_java 注解</a></p><h2 id="泛型">泛型</h2><p><a href="https://blog.csdn.net/s10461/article/details/53941091?ops_request_misc=%7B%22request%5Fid%22%3A%22164464532116781683995304%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=164464532116781683995304&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-53941091.pc_search_result_control_group&amp;utm_term=java%E6%B3%9B%E5%9E%8B&amp;spm=1018.2226.3001.4187">java 泛型详解</a></p><h2 id="网络编程">网络编程</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Server:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Server</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;正在监听9999端口中&quot;</span>);</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line">        System.out.println(<span class="string">&quot;用户已连接&quot;</span>);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span>socket.getInputStream();</span><br><span class="line">        System.out.println(<span class="string">&quot;信息正在读取&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] buf=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len=is.read(buf))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(buf, <span class="number">0</span>, len));</span><br><span class="line">        &#125;</span><br><span class="line">        is.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Clint:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cilent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(InetAddress.getLocalHost(), <span class="number">9999</span>);</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        os.write(<span class="string">&quot;hello,World!&quot;</span>.getBytes());</span><br><span class="line">        System.out.println(<span class="string">&quot;发送完毕&quot;</span>);</span><br><span class="line">        os.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://segmentfault.com/a/1190000022654702">Java11相对Java8的新特性</a></p><h2 id="JavaSwing">JavaSwing</h2><p><a href="https://blog.csdn.net/xietansheng/article/details/72814492?ops_request_misc=%7B%22request%5Fid%22%3A%22164489544216780261925894%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=164489544216780261925894&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-72814492.pc_search_result_control_group&amp;utm_term=javaswing&amp;spm=1018.2226.3001.4187">Java Swing 图形界面开发（目录）</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java课</title>
      <link href="/2022/08/25/Java/Course/"/>
      <url>/2022/08/25/Java/Course/</url>
      
        <content type="html"><![CDATA[<h1>命名</h1><ol><li>字母 数字 下划线 美元符</li><li>开头 除了数字</li><li>关键词不能</li></ol><h1>数据类型</h1><p>基本数据类型+引用数据类型</p><p>二进制-十进制-ASCII码</p><p>A:65</p><p>a:97   相差32</p><p>一. 基本数据类型</p><p>四类八种</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span>     <span class="number">1</span>个字节<span class="number">8</span>位</span><br><span class="line"><span class="type">short</span>    <span class="number">2</span>个字节<span class="number">16</span>位</span><br><span class="line"><span class="type">int</span>      <span class="number">4</span>个字节<span class="number">32</span>位</span><br><span class="line"><span class="type">long</span>     <span class="number">8</span>个字节<span class="number">64</span>位</span><br><span class="line"><span class="type">float</span>    <span class="number">4</span>个字节<span class="number">32</span>位</span><br><span class="line"><span class="type">double</span>   <span class="number">8</span>个字节<span class="number">64</span>位</span><br><span class="line"><span class="type">char</span></span><br><span class="line"><span class="title function_">boolean</span> <span class="params">(<span class="literal">true</span> <span class="literal">false</span>)</span> 与C++不同的是 <span class="literal">true</span>!=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>二. 引用数据类型</p><p>引用(地址)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">类</span><br><span class="line">接口</span><br><span class="line">数组</span><br><span class="line">字符串</span><br></pre></td></tr></table></figure><h2 id="类型转换">类型转换</h2><p>byte - short (char) - int - long - float - double</p><p>自下而上自动转换</p><p>自上而下强制转换     (目标类型) 原始数据</p><p>java 中默认 整数 int  如是long 加 L ; 浮点数默认double  如是float 加 F</p><p>整型 取整数部分 不需四舍五入</p><p>格式化出固定小数点后面位数 System.out.printf(“%.mf”,浮点数);  <strong>四舍五入</strong></p><h1>变量与常量</h1><p>类型 名称</p><p>进制数:</p><ol><li><p>十六进制 <strong>0x</strong>65</p></li><li><p>八进制 <strong>0</strong>712</p></li><li><p>二进制 <strong>0b</strong>01010</p><p>结合字符考察</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">0101</span>; <span class="comment">//1*8*8+1</span></span><br><span class="line"><span class="type">char</span> c=(<span class="type">char</span>)x;</span><br><span class="line">System.out.println(c);</span><br></pre></td></tr></table></figure><p>常量</p></li></ol><p>final 类型 名称 不允许修改</p><p><strong>只可被使用不可被修改</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">int</span> x=<span class="number">10</span>;</span><br><span class="line">x=<span class="number">12</span>;   <span class="comment">// 不允许 x已经声明为常量</span></span><br></pre></td></tr></table></figure><h1>输入输出</h1><p>一. 输出</p><ol><li>System.out.println()  输出结果后自动换行</li><li>System.out.printf()    格式化输出</li></ol><p>输出指定进制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">101</span>;</span><br><span class="line">System.out.printf(<span class="string">&quot;%#x\n&quot;</span>,x);   <span class="comment">//#自动补格式 0x</span></span><br><span class="line">System.out.printf(<span class="string">&quot;%x\n&quot;</span>,x);</span><br><span class="line">System.out.printf(<span class="string">&quot;%#o&quot;</span>,x);</span><br></pre></td></tr></table></figure><p>二. 输入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 实例化</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//2. 接收对象</span></span><br><span class="line"><span class="type">int</span> n=scanner.nextInt();</span><br><span class="line">System.out.println(n);</span><br><span class="line"><span class="type">int</span> n=scanner.nextInt();  <span class="comment">//整数输入</span></span><br><span class="line">System.out.println(n);</span><br><span class="line"><span class="type">float</span> f=scanner.nextFloat();   <span class="comment">//浮点数输入</span></span><br><span class="line">System.out.println(f);</span><br><span class="line">String s=scanner.next();     <span class="comment">//字符串输入</span></span><br><span class="line">System.out.println(s);</span><br><span class="line"><span class="comment">//判断规避错误类型不匹配</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">boolean</span> c=scanner.hasNextInt(); <span class="comment">// return boolean</span></span><br><span class="line"><span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">    System.out.println(scanner.nextInt());</span><br><span class="line">&#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;error&quot;</span>);</span><br></pre></td></tr></table></figure><h1>运算符</h1><p>自增 ( 自减 )</p><p>++i : 先自增再赋值</p><p>i++ : 先赋值再自增</p><p>&amp;&amp; || 短路现象</p><p>switch <strong>注意 break 穿透</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;i++&lt;<span class="number">5</span>;)</span><br><span class="line">最终i=<span class="number">6</span></span><br></pre></td></tr></table></figure><h1>类和对象</h1><p>Java万物皆对象</p><p>对象是类的实例化,类是对象的抽象</p><p>对象=属性+行为</p><h1>网课</h1><p>this() 无参构造器</p><p>this(参数) 有参构造器</p><p>static</p><ol><li>导包 import static 包名  可以省去类名</li><li>静态代码块</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">公共类---只能有一个</span><br><span class="line"> 公共类<span class="keyword">static</span>代码块 &gt; main &gt; 其他类 <span class="keyword">static</span> &gt; 其他类的构造器</span><br></pre></td></tr></table></figure><ol start="3"><li>静态成员变量</li><li>静态成员方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">静态成员方法只能调用静态的(变量/方法)</span><br></pre></td></tr></table></figure><h1>常用类</h1><p>一 . 数学类</p><ol><li>公式类</li><li>随机数</li><li>四舍五入</li><li>大数值类</li></ol><p>公式类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(Math.PI);</span><br><span class="line">System.out.println(Math.E);</span><br><span class="line">System.out.println(Math.sin(<span class="number">90</span>));</span><br><span class="line">System.out.println(Math.log(Math.E)); <span class="comment">//以e为底的对数</span></span><br><span class="line">System.out.println(Math.log10(<span class="number">100</span>)); <span class="comment">//以10为底的对数</span></span><br><span class="line">System.out.println(Math.round(<span class="number">3.5</span>)); <span class="comment">//四舍五入</span></span><br><span class="line">System.out.println(Math.floor(<span class="number">3.5</span>)); <span class="comment">//向下取整</span></span><br><span class="line">System.out.println(Math.ceil(<span class="number">3.5</span>)); <span class="comment">//向上取整</span></span><br><span class="line"><span class="comment">//随机数</span></span><br><span class="line">System.out.println(Math.random());    <span class="comment">//[0.0,1.0)</span></span><br><span class="line"><span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">System.out.println(random.nextInt(<span class="number">100</span>));  <span class="comment">//[0,100)</span></span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">17</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">17</span>; i++) &#123;</span><br><span class="line">    arr[i]=random.nextInt(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : arr) &#123;</span><br><span class="line">    System.out.print(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//大数类</span></span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;999999999&quot;</span>);</span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;123345685&quot;</span>);</span><br><span class="line">System.out.println(b1.multiply(b2));</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">bs1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;9.99999999999&quot;</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">bs2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;12.13&quot;</span>);</span><br></pre></td></tr></table></figure><p>字符类</p><ol><li>String</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">String s=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello,world,C++,Java,C#,php&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>&#125;);</span><br><span class="line"><span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;<span class="number">66</span>,<span class="number">67</span>,<span class="number">68</span>,<span class="number">69</span>,<span class="number">70</span>&#125;);</span><br><span class="line"><span class="comment">//比较</span></span><br><span class="line">System.out.println(s1.equals(s2));  <span class="comment">//严格比较</span></span><br><span class="line">System.out.println(s.equalsIgnoreCase(<span class="string">&quot;HELLO&quot;</span>));</span><br><span class="line"><span class="comment">//String notchange  拼接 截取 替换 查找</span></span><br><span class="line">System.out.println(s + s1);</span><br><span class="line"><span class="comment">//截取</span></span><br><span class="line">System.out.println(s1.substring(<span class="number">6</span>));</span><br><span class="line">System.out.println(s1.substring(<span class="number">0</span>,<span class="number">5</span>));    <span class="comment">// [0 5)</span></span><br><span class="line"><span class="comment">//替换</span></span><br><span class="line"><span class="type">String</span> <span class="variable">newstr</span> <span class="operator">=</span> s1.replace(<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;;&#x27;</span>);  <span class="comment">//替换所有的</span></span><br><span class="line">System.out.println(newstr);</span><br><span class="line">System.out.println(s1.replaceAll(<span class="string">&quot;world&quot;</span>, <span class="string">&quot;Java&quot;</span>));</span><br><span class="line">System.out.println(s1.replaceFirst(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;;&quot;</span>));</span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line">System.out.println(s.charAt(<span class="number">2</span>));</span><br><span class="line">System.out.println(s1.indexOf(<span class="string">&quot;world&quot;</span>)); <span class="comment">// 查找第一次出现的位置</span></span><br><span class="line">System.out.println(s1.indexOf(<span class="string">&quot;world&quot;</span>,<span class="number">5</span>));</span><br><span class="line">System.out.println(s1.lastIndexOf(<span class="string">&quot;world&quot;</span>));  <span class="comment">//从后往前找</span></span><br><span class="line">System.out.println(s1.lastIndexOf(<span class="string">&quot;world&quot;</span>, <span class="number">16</span>));</span><br></pre></td></tr></table></figure><ol><li>StringBuilder</li><li>String Buffer</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">StringBuffer 多线程,安全,效率不高</span><br><span class="line">StringBuilder 单线程,不安全,效率高</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;Hello,World &quot;</span>);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;Tom and Jerry&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//追加</span></span><br><span class="line">        str1.append(str2);       <span class="comment">// str1本身发生改变</span></span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        str1.deleteCharAt(<span class="number">11</span>);     <span class="comment">//数组坐标    单字符</span></span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">        str1.delete(<span class="number">11</span>,<span class="number">14</span>);        <span class="comment">// [start,end)    字符串</span></span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//替换 ***</span></span><br><span class="line">        str1.replace(<span class="number">11</span>,<span class="number">12</span>,<span class="string">&quot;Bob&quot;</span>);   <span class="comment">// [start,end)</span></span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//插入</span></span><br><span class="line">        str1.insert(<span class="number">5</span>,<span class="number">6</span>);   <span class="comment">// before offset</span></span><br><span class="line">        System.out.println(str1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分割</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Tom and Jerry and Bob &quot;</span>;</span><br><span class="line">        String[] strs = str.split(<span class="string">&quot;[ao]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String s : strs) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> Integer.valueOf(<span class="string">&quot;2&quot;</span>);</span><br></pre></td></tr></table></figure><h1>继承</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Java中只有单继承</span><br><span class="line">关键词: extends</span><br><span class="line">所有类默认继承Object类</span><br><span class="line">UML类图体现类之间的关系</span><br><span class="line">调用子类的构造器时先调用父类的构造器(无参)</span><br><span class="line">域的隐藏:</span><br><span class="line">对于属性: 子类中有与父类中的重新定义属性</span><br><span class="line">方法的重写: ( 区别于方法的重载 )</span><br><span class="line">对于方法   </span><br><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="built_in">super</span>--父类的一个对象 ( 对比于 <span class="built_in">this</span>--本类的一个对象)</span><br><span class="line">位置构造函数的第一行 (位置冲突)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">同一个类</th><th style="text-align:center">同一个包</th><th style="text-align:center">不同包的子类</th><th style="text-align:center">不同包的非子类</th></tr></thead><tbody><tr><td style="text-align:center">private</td><td style="text-align:center">V</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">default</td><td style="text-align:center">V</td><td style="text-align:center">V</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">protected</td><td style="text-align:center">V</td><td style="text-align:center">V</td><td style="text-align:center">V</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">public</td><td style="text-align:center">V</td><td style="text-align:center">V</td><td style="text-align:center">V</td><td style="text-align:center">V</td></tr></tbody></table><p>public 类 才能导入包</p><h1>final 关键词:</h1><ol><li><p>变量 ( 静态)</p><p>( 1 ). 普通变量</p><p>​        定义时赋值</p><p>​        构造器赋值</p><p>( 2 ). 静态变量</p><p>​        静态代码块</p></li><li><p>方法</p></li></ol><p>​      不允许重写</p><ol start="3"><li><p>类</p><p>不允许继承</p></li></ol><h1>多态</h1><ol><li>继承</li><li>子类重写父类的方法</li><li>子类的对象是父类的对象</li></ol><p>向上转型,向下转型</p><p>Animal a = new Dog();</p><p>Dog d = (Dog) a;</p><p>Dog g = new Animal();      //  X</p><h1>抽象类</h1><p>抽象方法: 父类方法只作声明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式: <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">fun</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ol><li><p>包含抽象方法的类必须声明为<strong>抽象类</strong></p></li><li><p>抽象类不一定包含抽象方法</p></li><li><p>抽象类可以包含普通方法</p></li><li><p>抽象类不能实例化 ( 多态的一种体现 )</p></li><li><p>继承时抽象方法必须重写</p></li></ol><h1>接口</h1><p>特殊的抽象类 : 所有方法都为抽象方法</p><p><strong>成员变量</strong>: 必须<strong>静态常量</strong></p><p><strong>接口没有构造方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">fun1</span><span class="params">()</span>;</span><br><span class="line">             <span class="keyword">void</span> <span class="title function_">fun2</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口与接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">继承关系 ( 单继承 )</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类与接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">实现关系 ( 多实现 )</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">implements</span> <span class="title class_">A</span> , B&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继承与实现的顺序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先继承再实现</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span> <span class="keyword">extends</span> <span class="title class_">C</span> <span class="keyword">implements</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问控制权限</p><figure class="highlight plaintext"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接口: public</span><br><span class="line">抽象类: default</span><br></pre></td></tr></table></figure><h1>异常</h1><ol><li>运行异常 RuntimeException</li><li>受检查异常</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数学异常 ArithmeticException  <span class="number">2</span> / <span class="number">0</span>    <span class="comment">// / by zero</span></span><br><span class="line">空指针异常 NullPointeException </span><br><span class="line">数组大小为负值 NegativeArraySizeException</span><br><span class="line">数组索引越界 ArrayIndexOutOfBoundsException</span><br><span class="line">数字格式异常 NumberFormatException</span><br><span class="line">输入类型不匹配异常 InputMismatchException           </span><br></pre></td></tr></table></figure><p>异常的处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">catch</span>(*Exception e)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    <span class="comment">//资源释放</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1.</span> 多种异常相同处理</span><br><span class="line"><span class="number">2.</span> 多种异常不同处理 多重捕获 <span class="keyword">catch</span>()&#123;&#125; <span class="keyword">catch</span>()&#123;&#125; 先捕获子类异常再捕获父类</span><br><span class="line"></span><br><span class="line"><span class="keyword">throw</span> 与 <span class="keyword">throws</span></span><br><span class="line"><span class="number">1.</span> <span class="keyword">throws</span> 方法使用,谁调用谁解决</span><br><span class="line"><span class="number">2.</span> <span class="keyword">throw</span> 自定义异常 方法体中的其它捕获</span><br><span class="line">   </span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">&#125;<span class="keyword">catch</span>(A e)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    Strring errorMessage;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>集合</h1><p><img src="../../assets/img/java/Java%E9%9B%86%E5%90%88%E6%A1%86%E5%9B%BE.png" alt="Java集合框图"></p><h2 id="List接口及实现类-单值">List接口及实现类  ( 单值 ):</h2><p>ArraryList</p><p><img src="../../assets%5Cimg%5Cjava%5CArraryListMeth.jpg" alt="ArraryListMeth"></p><p>遍历:</p><ol><li>普通for</li><li>增强for</li><li>迭代器 ( 迭代器不能返回 )</li></ol><p><img src="../../assets%5Cimg%5Cjava%5CIterator.jpg" alt="Iterator"></p><p>Stack:</p><p><img src="../../assets%5Cimg%5Cjava%5Cstack.jpg" alt="stack"></p><p>Queue:</p><p><img src="../assets/img/java/stack.jpg" alt="stack"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Queue</span> <span class="variable">que</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br></pre></td></tr></table></figure><h2 id="set接口及实现类">set接口及实现类:</h2><p><img src="../../assets%5Cimg%5Cjava%5CHashSet.jpg" alt="HashSet"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Set</span> <span class="variable">set</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br></pre></td></tr></table></figure><h2 id="Map接口及实现类-键值对">Map接口及实现类  ( 键值对 ):</h2><p><img src="../../assets%5Cimg%5Cjava%5CHashMap1.jpg" alt="HashMap1"></p><p><img src="../../assets%5Cimg%5Cjava%5CHashMap2.jpg" alt="HashMap2"></p><h1>泛型</h1><p>数据类型参数化 ( 对参数类型的一种约束 )</p><p>代替名: Ｋ T V  E  ( 必须是引用类型 )     // byte shot int long double float  char boolean 基本数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;Ingter&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br></pre></td></tr></table></figure><h1>IO流</h1><p>文件类 ( File类 )</p><p>路径:</p><ol><li><p>相对路径: 文件存在位置: src同级目录</p></li><li><p>绝对路径: 完整的路径名称</p></li></ol><p>文件夹可相当于特殊的文件的形式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">        <span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        System.out.println(file1.getName());</span><br><span class="line">        System.out.println(file1.getPath());</span><br><span class="line">        System.out.println(file1.getAbsolutePath());</span><br><span class="line">        System.out.println(file1.length());</span><br><span class="line">        System.out.println(file1.canRead());</span><br><span class="line">        System.out.println(file1.canWrite());</span><br><span class="line">        System.out.println(file1.isHidden());</span><br><span class="line">        System.out.println(file1.exists());</span><br><span class="line"><span class="comment">//        System.out.println(file1.delete());</span></span><br><span class="line"><span class="comment">//        file1.createNewFile();</span></span><br><span class="line">        file1.renameTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;test.txt&quot;</span>));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//1.实例化文件对象</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;1.txt&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">file2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;2.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//2.实例化文件输入流</span></span><br><span class="line">            <span class="type">Reader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(file1);</span><br><span class="line">            <span class="comment">//3.实例化缓冲流</span></span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">bufferedReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(reader);</span><br><span class="line">            <span class="type">BufferedWriter</span> <span class="variable">bufferedWriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(file2,<span class="literal">true</span>));</span><br><span class="line">            String s;</span><br><span class="line">            <span class="keyword">while</span> (bufferedReader.ready()) &#123;</span><br><span class="line">                s = bufferedReader.readLine()+<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                bufferedWriter.append(s);</span><br><span class="line"><span class="comment">//                bufferedWriter.newLine();</span></span><br><span class="line">            &#125;</span><br><span class="line">            bufferedReader.close();</span><br><span class="line">            bufferedWriter.flush();</span><br><span class="line">            bufferedWriter.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;Not find this file!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;读取失败!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="../../assets%5Cimg%5Cjava%5C20190908093820782.jpg" alt="20190908093820782"></p><h1>复习</h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOS基本命令</title>
      <link href="/2022/08/25/Dos/Grammar/"/>
      <url>/2022/08/25/Dos/Grammar/</url>
      
        <content type="html"><![CDATA[<h1>Dos命令</h1><p>[百度百科](<a href="https://baike.baidu.com/item/DOS%E5%91%BD%E4%BB%A4/5143255?fr=aladdin">DOS命令_百度百科 (baidu.com)</a>)</p><p><strong>Windows系统不区分大小写</strong></p><p>退出终端:   <strong>exit</strong></p><p>清除位置盘符:   <strong>@echo off</strong></p><p>输出字符:    <strong>echo  字符名     注意:   % 变量名%</strong></p><p>清屏:    <strong>cls</strong></p><p>等待用户操作:  <strong>pause</strong></p><p>切换盘符:   <strong>盘符名   :       或      cd / 盘符名 :</strong></p><p>访问当前目录下所有文件:   <strong>dir</strong></p><p>切换同一级目录:   <strong>cd  文件名</strong></p><p>返回上一级目录:   <strong>cd …</strong></p><p>创建目录:    <strong>md 目录名</strong></p><p>删除目录:   <strong>rd目录名</strong></p><p>目录拷贝 : <strong>copy</strong></p><p>创建文件:   <strong>cd &gt; 文件名 . 后缀名</strong></p><p>删除文件:   <strong>del 文件名</strong></p><p>文件剪切 :   <strong>move</strong></p><p>算术运算:   <strong>set/a  1+2</strong></p><p>运算符:   <strong>+   -   *   /   %(取余)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span>/a var=1+2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;var&quot;</span></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>重定向:   <strong>&gt;   &gt;&gt;   &lt;   &lt;&lt;</strong></p><p>​               **箭头方向表示文件输入方向 **</p><p>​               <strong>单箭头表示覆盖,双箭头表示追加</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   echo &quot;abc&quot;&gt;text.txt</span><br><span class="line">1. echo &quot;def&quot;&gt;text.txt     abcdef</span><br><span class="line">2. echo &quot;def&quot;&gt;&gt;text.txt    def</span><br></pre></td></tr></table></figure><p>多命令运算:   <strong>&amp;&amp;   ||</strong></p><p>​                        <strong>&amp;&amp;  :  只有  正确 -&gt;  ; 错误  X-&gt;</strong></p><p>​                        <strong>||    :  执行正确的</strong></p><p>管道操作运算:        <strong>|</strong></p><p>查找:  <strong>find   “条件”</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir | find &quot;条件&quot;</span><br></pre></td></tr></table></figure><p><strong>netstat:   这是一个用来查看网络状态的命令，操作简便功能强大。</strong></p><p>​                <strong>-an查看本地机器的所有端口</strong></p><p>​                <strong>-a 查看本地机器的所有开放端口，可以有效发现和预防木马，可以知道机器所开的服务等信息。</strong></p><p>​                <strong>这里可以看出本地机器开放有FTP服务、Telnet服务、邮件服务、WEB服务等。用法：netstat -a IP。</strong></p><p>​                <strong>-r 列出当前的路由信息，告诉我们本地机器的网关、子网掩码等信息。用法：netstat -r IP</strong>。</p><p>​                 <strong>(444端口连接可能中木马了)</strong></p><p>批处理命令基本格式:    <strong>命令   子命令   参数   操作</strong>       <strong>/?   /help   获取帮助文档</strong></p><p>参数的传递 :    <strong>% num   %1  %2  ~~~</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">net user %1 %2 /add</span><br></pre></td></tr></table></figure><p>注释 :   <strong>rem 注释内容</strong></p><p>cmd窗口设置 :   <strong>color   title</strong></p><p>时间命令 :   <strong>date    time</strong></p><p>启动命令:   <strong>start</strong></p><p>调用其它bat文件:   <strong>call   bat文件名</strong></p><p>任务列表查看 :   <strong>tasklist</strong></p><p>终止任务进程 :   <strong>taskkill</strong></p><p>文件夹结构命令 :   <strong>tree</strong></p><p>关机命令 :    <strong>shutdown</strong></p><p>计划任务命令 :   <strong>schtasks</strong></p><p>文件夹重命名命令 :   <strong>ren</strong></p><p>用户操作命令 :   <strong>net user</strong></p><p>用户组操作命令 :   <strong>net localgroup</strong></p><p>主机联通性检测命令 :  <strong>ping</strong></p><p>网络路由信息命令 :  <strong>tracert</strong></p><p>网络适配器命令 :   <strong>ipconfig</strong></p><p>ARP信息命令 :   <strong>arp</strong></p><p>条件判断结构 :   <strong>if-else</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set var=6</span><br><span class="line">if %var%==6 (echo Yes) else (echo No)</span><br><span class="line">pause&gt;nul</span><br></pre></td></tr></table></figure><p>判断文件是否存在 :   <strong>exists</strong></p><p>循环遍历文件夹名称 :    <strong>for</strong></p><p>交互操作跳转语句 :   <strong>goto</strong></p><p>代码块 :   <strong>:  名称</strong></p><p>![屏幕截图 2021-05-30 192033](…/…/assets/img/dos/屏幕截图 2021-05-30 192033.jpg)</p><p>![屏幕截图 2021-05-30 192033](…/…/assets/img/dos/屏幕截图 2021-05-30 192033.jpg)</p><p>![屏幕截图 2021-05-30 192638](…/…/assets/img/dos/屏幕截图 2021-05-30 192638.jpg)</p><p>![屏幕截图 2021-05-30 195713](…/…/assets/img/dos/屏幕截图 2021-05-30 195713.jpg)</p>]]></content>
      
      
      <categories>
          
          <category> DOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科目一</title>
      <link href="/2022/08/25/Car/%E7%A7%91%E7%9B%AE%E4%B8%80/"/>
      <url>/2022/08/25/Car/%E7%A7%91%E7%9B%AE%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2212a145b46708496701ade7cc4438a1ddd18192947f7eb1d122f19ceea19e17"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 驾驶技能 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
